#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright (C) 2016-2021 ParaPy Holding B.V.
#
# This file is subject to the terms and conditions defined in
# the license agreement that you have received with this source code
#
# THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY
# KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR
# PURPOSE.

#                                                  _
#                                                 (_)
#          _ __   __ _ _ __ __ _ _ __  _   _       _  ___
#         | '_ \ / _` | '__/ _` | '_ \| | | |     | |/ _ \
#         | |_) | (_| | | | (_| | |_) | |_| |  _  | | (_) |
#         | .__/ \__,_|_|  \__,_| .__/ \__, | (_) |_|\___/
#         | |                   | |     __/ |
#         |_|                   |_|    |___/
#

"""
:mod:`~parapy.io` - Core tools for reading from and writing to files.
=====================================================================

.. moduleauthor:: Reinier van Dijk <reiniervandijk@gmail.com>
.. versionadded:: 1.0
.. module:: parapy.io
    :synopsis: Core tools for reading from and writing to files.

The io package provides several Reader and Writer classes to read / write
data from several file types.

At the top of the I/O hierarchy is the abstract base class
:class:`~parapy.io.base.FileBase`. It defines the basic interface to a
file. Subclasses :class:`~parapy.io.base.FileReader` and
:class:`~parapy.io.base.FileWriter` are conrete subclasses for reading from
and writing to any type of file. There default behavior is quite basic, either
return all contents as str, or write all specified data (also a str) to a file.

+-------+---------------------------------------------------------------------------------+------------------------+-------------------------------------------+
| File  | Classes                                                                         | Module                 | Comment                                   |
+=======+=================================================================================+========================+===========================================+
| csv   | :class:`~parapy.io.csv.CSVReader` & :class:`~parapy.io.csv.CSVWriter`           | :mod:`parapy.io.csv`   | comma-separated value files (*.csv)       |
+-------+---------------------------------------------------------------------------------+------------------------+-------------------------------------------+
| json  | :class:`~parapy.io.json.JSONReader` & :class:`~parapy.io.json.JSONWriter`       | :mod:`parapy.io.json`  | Javascript Object Notation files (*.json) |
+-------+---------------------------------------------------------------------------------+------------------------+-------------------------------------------+
| excel | :class:`~parapy.io.excel.ExcelReader` & :class:`~parapy.io.excel.ExcelWriter`   | :mod:`parapy.io.excel` | MS Office Excel files (*.xlsx, *.xlsm)    |
+-------+---------------------------------------------------------------------------------+------------------------+-------------------------------------------+
"""

# this is a namespace package
try:
    import pkg_resources
    pkg_resources.declare_namespace(__name__)
except (ImportError, AttributeError):
    import pkgutil
    __path__ = pkgutil.extend_path(__path__, __name__)
