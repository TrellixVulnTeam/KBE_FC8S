#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright (C) 2016-2021 ParaPy Holding B.V.
#
# This file is subject to the terms and conditions defined in
# the license agreement that you have received with this source code
#
# THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY
# KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR
# PURPOSE.

"""Some globals for the core"""

import os
import warnings

from parapy.config import CONFIGURATION as CONF
from parapy.globs import PKG_DIR as PKG_DIR_ROOT
from parapy.gui.utilities import locate

__all__ = ('CONFIGURATION', 'PKG_DIR', "DAT_DIR", "ICN_DIR",
           "VIEWPORT_GRID_SETTINGS", "POSITION_RENDERING_MODE",
           "POSITION_RENDERING_SIZE")

# local copy for fast attribute lookup!
CONFIGURATION = {"warn_on_close_inspector":
                 CONF.getboolean("gui", "warn_on_close_inspector"),
                 "status_bar":
                 CONF.getboolean("gui", "status_bar"),
                 "update_data_panel_on_geom_click":
                 CONF.getboolean("gui", "update_data_panel_on_geom_click"),
                 "log_exceptions_in_data_panel":
                 CONF.getboolean("gui.property_view", "log_exceptions"),
                 "autodraw": CONF.getboolean("gui", "autodraw"),
                 "popup_exceptions_in_data_panel":
                 CONF.getboolean("gui.property_view", "popup_exceptions"),
                 }

# different modes for update_tree_on_viewer_object_click
UTOVOC_MODE_NONE = None
UTOVOC_MODE_ITEM = 'item'
UTOVOC_MODE_ITEM_NO_EXPAND = 'item_no_expand'

# parse update_tree_on_viewer_object_click setting
_tree_on_viewer_click = CONF.get('gui', 'update_tree_on_viewer_object_click')
if _tree_on_viewer_click == 'None':
    _tree_on_viewer_click = UTOVOC_MODE_NONE
elif _tree_on_viewer_click not in (UTOVOC_MODE_ITEM,
                                   UTOVOC_MODE_ITEM_NO_EXPAND):
    msg = ("Invalid setting for [gui] update_tree_on_viewer_object_click "
           "detected in CONFIG.INI! Got {!r}, but expected either 'item' "
           "'item_no_expand' or 'None'. Continuing, but defaulting to None.")
    warnings.warn(msg.format(_tree_on_viewer_click))
    _tree_on_viewer_click = UTOVOC_MODE_NONE
CONFIGURATION['update_tree_on_viewer_object_click'] = _tree_on_viewer_click


# don't use __file__, installation can be frozen.
PKG_DIR = os.path.join(PKG_DIR_ROOT, "gui", "")
DAT_DIR = os.path.join(PKG_DIR, "data", "")
ICN_DIR = os.path.join(PKG_DIR, "icons", "")

VIEWPORT_GRID_SETTINGS = [CONF.getboolean("gui.viewport.grid", "show"),
                          CONF.getfloat("gui.viewport.grid", "xorig"),
                          CONF.getfloat("gui.viewport.grid", "yorig"),
                          CONF.getfloat("gui.viewport.grid", "angle"),
                          CONF.getfloat("gui.viewport.grid", "width"),
                          CONF.getfloat("gui.viewport.grid", "length"),
                          CONF.getfloat("gui.viewport.grid", "xstep"),
                          CONF.getfloat("gui.viewport.grid", "ystep")]

# Settings on how the Position object should be rendered
POSITION_RENDERING_MODE = CONF.get("gui.viewport", "position_rendering_mode")

_legal_options = ('point', 'axes')
if POSITION_RENDERING_MODE not in _legal_options:
    msg = ("Invalid setting for [gui.viewport] position_rendering_mode "
           "detected in CONFIG.INI! Got {!r}, valid options: {}. "
           "Continuing, but defaulting to 'point'.")
    warnings.warn(msg.format(POSITION_RENDERING_MODE, _legal_options))
    POSITION_RENDERING_MODE = 'point'

try:
    POSITION_RENDERING_SIZE = CONF.getfloat("gui.viewport",
                                            "position_rendering_size")
except ValueError:  # not a number
    _size = CONF.get("gui.viewport", "position_rendering_size")
    if _size != "None":
        msg = ("Invalid setting for [gui.viewport] position_rendering_size "
               "detected in CONFIG.INI! Got {!r}, but expecting either a "
               "number or 'None'. Continuing, but defaulting to None.")
        warnings.warn(msg.format(_size))
    POSITION_RENDERING_SIZE = None

_main_window_class_reference = CONF.get("gui", "main_window_class")
try:
    MAIN_WINDOW_CLASS = locate(_main_window_class_reference)
except Exception as e:
    msg = "Couldn't locate MainWindow class {!r} as defined in config.INI. " \
          "Exception: {!r}."
    raise ValueError(msg.format(_main_window_class_reference, e))
