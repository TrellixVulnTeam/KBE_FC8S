#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright (C) 2016-2021 ParaPy Holding B.V.
#
# This file is subject to the terms and conditions defined in
# the license agreement that you have received with this source code
#
# THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY
# KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR
# PURPOSE.

"""Utility to print docs from classes."""

import collections

from parapy.core import full_path, get_classes
from parapy.geom.occ.drawable import DrawableShape


def print_docs(path="netgen.html"):
    path = full_path(path)
    f = open(path, 'w')
    ignore_keys = list(DrawableShape._slots.keys())
    Classes = get_classes("parapy.mesh.salome.netgen", base_class=Base)
    f.write("<h1>NETGEN Classes</h1>")
    f.write("""<p>For more information about the algorithms and hypotheses, 
    see: <a href='http://docs.salome-platform.org/salome_6_6_0/gui/NETGENPLUGIN/netgen_2d_3d_hypo_page.html'>Salome</a>""")
    for Class in Classes: # sorted(Classes, key=operator.attrgetter("__name__")):
        f.write("<h2>%s</h2>" % Class.__name__)
        f.write("<p>%s</p>" % Class.__doc__)
        f.write("""<table border="1">
        <tr>
          <th>Input</td>
          <th>Description</td> 
        </tr>""")
        for key, val in collections.OrderedDict(
                sorted(Class._inputs.items())).items():
            if key not in ignore_keys:
                f.write("<tr><td>%s</td><td>%s</td></tr>" % (key, val.__doc__))
        f.write("</table>")
    f.close()
    print("written:", path)
    return path


if __name__ == '__main__':

    from parapy.mesh.salome.netgen import *
    print_docs()
