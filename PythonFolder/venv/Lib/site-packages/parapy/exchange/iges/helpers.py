#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright (C) 2016-2021 ParaPy Holding B.V.
#
# This file is subject to the terms and conditions defined in
# the license agreement that you have received with this source code
#
# THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY
# KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR
# PURPOSE.

import warnings

from OCC.wrapper.IGESCAFControl import IGESCAFControl_Reader, IGESCAFControl_Writer
from OCC.wrapper.IGESControl import IGESControl_Controller
from OCC.wrapper.IGESData import Handle_IGESData_IGESEntity
from OCC.wrapper.TCollection import TCollection_HAsciiString

import parapy
from parapy.globs import SUPPORT_EMAIL
from parapy.geom.occ import OCC_VERSION
from parapy.exchange.cafcontrol.helpers import XCAFRoot

IGES_CASTS = (Handle_IGESData_IGESEntity,)


class IGESCAFRoot(XCAFRoot):

    DEFAULT_SEND_NAME = "ParaPy {} - Open CASCADE IGES processor {}" \
        .format(parapy.__version__, OCC_VERSION)

    DEFAULT_INTERFACE_VERSION = "ParaPy {} - Open CASCADE IGES processor {}" \
        .format(parapy.__version__, OCC_VERSION)

    DEFAULT_SYSTEM_ID = "ParaPy {} - Open CASCADE {}" \
        .format(parapy.__version__, OCC_VERSION)

    __initialized = False

    def __init__(self, send_name=None, interface_version=None,
                 system_id=None, **kwargs):
        self.send_name = send_name or self.DEFAULT_SEND_NAME
        self.interface_version = (interface_version or
                                  self.DEFAULT_INTERFACE_VERSION)
        self.system_id = system_id or self.DEFAULT_SYSTEM_ID

        super(IGESCAFRoot, self).__init__(**kwargs)

        if not self.__initialized:
            self._init()
            self.__initialized = True

    @staticmethod
    def _init():
        IGESControl_Controller.Init()

    def _init_reader(self):
        return IGESCAFControl_Reader()

    def _init_writer(self):
        writer = IGESCAFControl_Writer()
        self._set_header_entities(writer)
        return writer

    def _set_header_entities(self, writer):
        model = writer.Model()
        """:type: OCC.IGESData.IGESData_IGESModel"""
        model.ApplyStatic()
        header = model.GlobalSection()

        if self.send_name:
            s = TCollection_HAsciiString(self.send_name).handle
            header.SetSendName(s)
        if self.interface_version:
            s = TCollection_HAsciiString(self.interface_version).handle
            header.SetInterfaceVersion(s)
        if self.system_id:
            s = TCollection_HAsciiString(self.system_id).handle
            header.SetSystemId(s)

    def _init_xs_control_reader(self):
        """:rtype: OCC.XSControl.XSControl_Reader"""
        return self.reader

    def _init_interface_model(self):
        """:rtype: OCC.IGESData.IGESData_IGESModel """
        return self.reader.IGESModel()

    def _handle_name(self, handle):
        """
        :param OCC.Standard.Handle_Standard_Transient handle:
        :rtype: str
        """
        for cast in IGES_CASTS:
            entity = cast(handle)
            if entity.IsNull():
                continue
            else:
                name = entity.NameValue()
                if name.IsNull():
                    return self.default_name
                else:
                    return name.ToCString()

        msg = ("Failed to retrieve name from IGES file. Issue: downcast of {} "
               "not supported yet. Contact: {}.")
        warnings.warn(msg.format(handle.DynamicType().Name(), SUPPORT_EMAIL))
        return self.default_name
