#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright (C) 2016-2021 ParaPy Holding B.V.
#
# This file is subject to the terms and conditions defined in
# the license agreement that you have received with this source code
#
# THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY
# KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR
# PURPOSE.

from parapy.exchange.cafcontrol.reader import CAFControl_Reader
from parapy.exchange.iges.helpers import IGESCAFRoot


class IGESReader(CAFControl_Reader):
    """Read shape(s) from .iges or .igs file. Result is accessible from
    :attr:`children` attribute. Typically the top-level child object is an
    :class:`~parapy.exchange.cafcontrol.base.Assembly` composing many simple
    :class:`~parapy.exchange.cafcontrol.base.Shape` objects. Usage:

    >>> from parapy.exchange import IGESReader
    >>> reader = IGESReader(filename="path/to/your/file.iges")
    >>> reader.children  # doctest: +SKIP
    Read: path/to/your/file.iges
    [<Assembly root.children[0] at 0x...>]
    >>> reader.children[0].children  # doctest: +SKIP
    [<Face root.children[0].children[0] at 0x...>, ...]
    >>> reader.children[0].children.doc_id  # doctest: +SKIP
    'D38'

    You can specify additional settings to the IGES reader. See `OCCT docs
    <https://www.opencascade.com/doc/occt-7.1.0/overview/html/
    occt_user_guides__iges.html#occt_iges_2_3_3>`_ for all options. Usage:

    >>> reader = IGESReader(filename="path/to/your/file.iges",
    ...                     settings={"read.precision.mode": 1,
    ...                               "read.precision.val": 0.001})

    Finally, you can control the label of shapes that have no name inside the
    IGES document using the :attr:`default_name` Input:

    >>> reader = IGESReader(filename="path/to/your/file.iges",
    ...                     default_name="some custom name")
    """

    wildcard = "iges file (*.igs,*.iges) |*.igs;*.iges"

    def _init_helper(self):
        return IGESCAFRoot(default_name=self.default_name,
                           settings=self.settings,
                           color_mode=self.color_mode,
                           name_mode=self.name_mode,
                           layer_mode=self.layer_mode)
