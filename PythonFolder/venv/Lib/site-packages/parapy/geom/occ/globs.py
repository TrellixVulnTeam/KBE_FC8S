#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright (C) 2016-2021 ParaPy Holding B.V.
#
# This file is subject to the terms and conditions defined in
# the license agreement that you have received with this source code
#
# THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY
# KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR
# PURPOSE.

"""Global variables for the parapy.geom.occ package."""

from OCC.wrapper.TopAbs import (TopAbs_VERTEX, TopAbs_EDGE, TopAbs_WIRE, TopAbs_FACE,
                        TopAbs_SHELL, TopAbs_SOLID, TopAbs_COMPSOLID,
                        TopAbs_COMPOUND)
from OCC.wrapper.TopoDS import (TopoDS__Vertex, TopoDS__Edge, TopoDS__Wire, TopoDS__Face,
                        TopoDS__Shell,
                        TopoDS__Solid, TopoDS__CompSolid, TopoDS__Compound)
from OCC.wrapper.gce import (gce_Done, gce_ConfusedPoints, gce_NegativeRadius,
                     gce_ColinearPoints,
                     gce_IntersectionError, gce_NullAxis, gce_NullAngle,
                     gce_NullRadius,
                     gce_InvertAxis, gce_BadAngle, gce_InvertRadius,
                     gce_NullFocusLength,
                     gce_NullVector, gce_BadEquation)

# http://jcae.sourceforge.net/occjava-doc/org/jcae/opencascade/jni/TopAbs_ShapeEnum.html
TopAbs2Class = {TopAbs_VERTEX: "VertexClass",
                TopAbs_EDGE: "EdgeClass",
                TopAbs_WIRE: "WireClass",
                TopAbs_FACE: "FaceClass",
                TopAbs_SHELL: "ShellClass",
                TopAbs_SOLID: "SolidClass",
                TopAbs_COMPSOLID: "CompsolidClass",
                TopAbs_COMPOUND: "CompoundClass"}

TobAbs2TopoDS = {TopAbs_VERTEX: TopoDS__Vertex,
                 TopAbs_EDGE: TopoDS__Edge,
                 TopAbs_WIRE: TopoDS__Wire,
                 TopAbs_FACE: TopoDS__Face,
                 TopAbs_SHELL: TopoDS__Shell,
                 TopAbs_SOLID: TopoDS__Solid,
                 TopAbs_COMPSOLID: TopoDS__CompSolid,
                 TopAbs_COMPOUND: TopoDS__Compound}

Name2TopAbs = {"vertex": TopAbs_VERTEX,
               "edge": TopAbs_EDGE,
               "wire": TopAbs_WIRE,
               "face": TopAbs_FACE,
               "shell": TopAbs_SHELL,
               "solid": TopAbs_SOLID,
               "compsolid": TopAbs_COMPSOLID,
               "compound": TopAbs_COMPOUND}

Name2Level = {"vertex": 7,
              "edge": 6,
              "wire": 5,
              "face": 4,
              "shell": 3,
              "solid": 2,
              "compsolid": 1,
              "compound": 0}

Level2Class = {7: "VertexClass",
               6: "EdgeClass",
               5: "WireClass",
               4: "FaceClass",
               3: "ShellClass",
               2: "SolidClass",
               1: "CompsolidClass",
               0: "CompoundClass"}

# lower case!
Level2Attr = {7: "vertices",
              6: "edges",
              5: "wires",
              4: "faces",
              3: "shells",
              2: "solids",
              1: "compsolids",
              0: "compounds"}

# lower case!
Level2Name = {7: "vertex",
              6: "edge",
              5: "wire",
              4: "face",
              3: "shell",
              2: "solid",
              1: "compsolid",
              0: "compound"}

Level2TopAbs = {7: TopAbs_VERTEX,
                6: TopAbs_EDGE,
                5: TopAbs_WIRE,
                4: TopAbs_FACE,
                3: TopAbs_SHELL,
                2: TopAbs_SOLID,
                1: TopAbs_COMPSOLID,
                0: TopAbs_COMPOUND}

Level2TopoDS = {7: TopoDS__Vertex,
                6: TopoDS__Edge,
                5: TopoDS__Wire,
                4: TopoDS__Face,
                3: TopoDS__Shell,
                2: TopoDS__Solid,
                1: TopoDS__CompSolid,
                0: TopoDS__Compound}

GCE_ERROR = {gce_Done: "Construction was successful",
             gce_ConfusedPoints: "Two points are coincident",
             gce_NegativeRadius: "Radius value is negative",
             gce_ColinearPoints: "Three points are collinear",
             gce_IntersectionError: "Intersection cannot be computed",
             gce_NullAxis: "Axis is undefined",
             gce_NullAngle: "Angle value is invalid (usually null)",
             gce_NullRadius: "Radius is null",
             gce_InvertAxis: "Axis value is invalid",
             gce_BadAngle: "Angle value is invalid",
             gce_InvertRadius: ("Radius value is incorrect (usually with "
                                "respect to another radius)"),
             gce_NullFocusLength: "Focal distance is null",
             gce_NullVector: "Vector is null",
             gce_BadEquation: ("Coefficients are incorrect (applies to the "
                               "equation of a geometric object)")}
