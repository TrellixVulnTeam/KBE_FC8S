#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright (C) 2016-2021 ParaPy Holding B.V.
#
# This file is subject to the terms and conditions defined in
# the license agreement that you have received with this source code
#
# THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY
# KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR
# PURPOSE.

"""Geometry classes and utilities build on OpenCascade kernel."""
import parapy.version
from parapy.geom.occ.annotation import (
    AngleDimension, AngleDimension3Points, DiameterDimension, Leader,
    LengthDimension, RadiusDimension, TextLabel, ColorScale, NumericColorScale,
    TextLeader, TextShape)
from parapy.geom.occ.curve import (
    Line, Line2P, LineSegment, TrimmedCurve, BezierCurve, BSplineCurve,
    ApproximatedCurve, ExtendedCurve, NormalizedCurve, ComposedCurve,
    DecomposedCurve, FittedCurve, InterpolatedCurve, UIso, VIso, Circle,
    Circle3P, Arc, Arc2P, Arc2A, Arc3P, Ellipse, DroppedCurve, Curve)
from parapy.geom.occ.surface import (Surface, Plane, CylindricalSurface,
                                     InfiniteCylindricalSurface,
                                     InfiniteConicalSurface, FilledSurface,
                                     BezierSurface, BSplineSurface,
                                     ConicalSurface, InfiniteConicalSurface,
                                     CylindricalSurface,
                                     InfiniteCylindricalSurface, Plane,
                                     Plane4C, SphericalSurface,
                                     TranslatedPlane,
                                     ToroidalSurface, ExtendedSurface,
                                     NormalizedSurface, ReconstructedSurface,
                                     RectangularSurface,
                                     FilledSurface, PipeSurface,
                                     MultiSectionSurface, DecomposedSurface,
                                     RevolvedSurface,
                                     RectangularTrimmedSurface,
                                     LinearlySweptSurface, FittedSurface,
                                     QuadBlendSurface, ApproximatedSurface,
                                     SweptSurface, InterpolatedSurface,
                                     ExtrudedSurface, PlateSurface, Plane3P)
from parapy.geom.occ.vertex import Vertex
from parapy.geom.occ.edge import Edge, EdgeSegment, FoldedCurve, Helix
from parapy.geom.occ.wire import (Wire, Polygon, Triangle, Rectangle,
                                  Quadrilateral, Tetragon, Pentagon, Hexagon,
                                  Septagon, Heptagon, Octagon, Nonagon,
                                  Decagon, NSidedPolygon, HomoWires,
                                  SplitCurve)
from parapy.geom.occ.face import (Face, TrimmedSurface, PlanarFace,
                                  CircularFace, PolygonalFace,
                                  NSidedPolygonalFace, RectangularFace)
from parapy.geom.occ.shell import (ExtrudedShell, SweptShell, PipeShell,
                                   MultiSectionShell)
from parapy.geom.occ.solid import (Solid, MultiSectionSolid,
                                   ExtrudedSolid, SweptSolid, PipeSolid)
from parapy.geom.occ.lofting import LoftedSurface, LoftedShell, LoftedSolid
from parapy.geom.occ.salome import (GluedSolids, PartitionedSolid,
                                    SplitSurface, SplitSolid,
                                    LocalSplitSurface, LocalSplitSolid,
                                    SplitEdge)
from parapy.geom.occ.brep import BRep
from parapy.geom.occ.compound import Compound, PointCloud
from parapy.geom.occ.primitives import (Box, Cube, Wedge, Cylinder,
                                        Cone, Sphere, Torus, Revolution,
                                        VisualBBox)
from parapy.geom.occ.clone import Clone
from parapy.geom.occ.chfi import (FilletedWire, FilletedFace,
                                  FilletedShell, FilletedSolid,
                                  ChamferedWire, ChamferedFace,
                                  ChamferedShell, ChamferedSolid)
from parapy.geom.occ.boolean import (IntersectedShapes,
                                     FusedShell, CommonShell, SubtractedShell,
                                     FusedSolid, CommonSolid, SubtractedSolid,
                                     Fused, Subtracted, Common)
from parapy.geom.occ.patterns import (UserPattern, RectPattern, RadialPattern,
                                      CurvePattern)
from parapy.geom.occ.transform import (TransformedCurve, TranslatedCurve,
                                       RotatedCurve, ScaledCurve,
                                       MirroredCurve, TransformedSurface,
                                       TranslatedSurface, RotatedSurface,
                                       ScaledSurface, MirroredSurface,
                                       TransformedShape, TranslatedShape,
                                       RotatedShape, ScaledShape,
                                       MirroredShape, ModifiedShape,
                                       FixedShape)
from parapy.geom.occ.projection import HLR, ProjectedCurve, ProjectedEdges
from parapy.geom.occ.offset import (OffsetWire, OffsetSurface, OffsetShell,
                                    OffsetPlane, ThickSolid, ThickShell)
from parapy.geom.occ.sewing import Shell, SewnSolid, CloseSurface, SewnShell
from parapy.geom.occ.sweeping import RevolvedSolid
from parapy.geom.occ.ruling import RuledSurface, RuledShell, RuledSolid
from parapy.geom.occ.halfspace import HalfSpaceSolid

import OCC.wrapper

try:
    OCC_VERSION = OCC.wrapper.OCC_VERSION
    OCC_VERSION_COMPLETE = OCC.wrapper.OCC_VERSION_COMPLETE
except AttributeError:
    # strip 4th digit from __version__
    OCC_VERSION = ".".join(OCC.__version__.split(".")[:3])
    OCC_VERSION_COMPLETE = OCC_VERSION

import parapy.config

OCC_VERSION = parapy.version.Version(OCC_VERSION)
OCC_VERSION_COMPLETE = parapy.version.Version(OCC_VERSION_COMPLETE)

if __name__ == '__main__':
    print(OCC_VERSION)
    print(OCC_VERSION_COMPLETE)
