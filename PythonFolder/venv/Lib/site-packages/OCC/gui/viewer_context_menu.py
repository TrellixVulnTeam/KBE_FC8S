#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright (C) 2016-2021 ParaPy Holding B.V.
#
# This file is subject to the terms and conditions defined in
# the license agreement that you have received with this source code
#
# THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY
# KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR
# PURPOSE.

import wx


class ContextMenu(wx.PopupWindow):
    def __init__(self, parent):
        wx.PopupWindow.__init__(self, parent, wx.SIMPLE_BORDER)

        # self.SetSizeHintsSz(wx.DefaultSize, wx.DefaultSize)

        # bSizer1 = wx.BoxSizer(wx.VERTICAL)

        self.panel = wx.Panel(self, wx.ID_ANY, wx.DefaultPosition,
                              wx.DefaultSize, wx.TAB_TRAVERSAL)
        gSizer1 = wx.GridSizer(0, 2, 0, 0)

        self.m_staticText1 = wx.StaticText(self.panel, wx.ID_ANY,
                                           "Background Top Color",
                                           wx.DefaultPosition, wx.DefaultSize,
                                           0)
        self.m_staticText1.Wrap(-1)
        gSizer1.Add(self.m_staticText1, 0, wx.ALL, 5)

        self.m_colourPicker1 = wx.ColourPickerCtrl(self.panel, wx.ID_ANY,
                                                   wx.BLACK,
                                                   wx.DefaultPosition,
                                                   wx.DefaultSize,
                                                   wx.CLRP_DEFAULT_STYLE)
        gSizer1.Add(self.m_colourPicker1, 0, wx.ALL, 5)

        self.m_staticText2 = wx.StaticText(self.panel, wx.ID_ANY,
                                           "Background Bottom Color",
                                           wx.DefaultPosition, wx.DefaultSize,
                                           0)
        self.m_staticText2.Wrap(-1)
        gSizer1.Add(self.m_staticText2, 0, wx.ALL, 5)

        self.m_colourPicker2 = wx.ColourPickerCtrl(self.panel, wx.ID_ANY,
                                                   wx.BLACK,
                                                   wx.DefaultPosition,
                                                   wx.DefaultSize,
                                                   wx.CLRP_DEFAULT_STYLE)
        gSizer1.Add(self.m_colourPicker2, 0, wx.ALL, 5)

        self.panel.SetSizer(gSizer1)
        self.panel.Layout()
        gSizer1.Fit(self.panel)

        sz = self.panel.GetBestSize()
        self.SetSize((sz.width+20, sz.height+20))

        # bSizer1.Add(self.panel, 1, wx.EXPAND | wx.ALL, 5)
        #
        # self.SetSizer(bSizer1)
        # self.SetSize((200, 200))
        # self.Layout()

        wx.CallAfter(self.Refresh)


class TestPanel(wx.Panel):
    """"""

    # ----------------------------------------------------------------------
    def __init__(self, parent):
        """Constructor"""
        wx.Panel.__init__(self, parent)

        btn = wx.Button(self, label="Open Popup")
        btn.Bind(wx.EVT_BUTTON, self.onShowPopup)

    # ----------------------------------------------------------------------
    def onShowPopup(self, event):
        """"""
        win = ContextMenu(self.GetTopLevelParent())

        btn = event.GetEventObject()
        pos = btn.ClientToScreen((0, 0))
        sz = btn.GetSize()
        win.Position(pos, (0, sz[1]))

        win.Show(True)


########################################################################
class TestFrame(wx.Frame):
    """"""

    # ----------------------------------------------------------------------
    def __init__(self):
        """Constructor"""
        wx.Frame.__init__(self, None, title="Test Popup")
        panel = TestPanel(self)
        self.Show()


if __name__ == '__main__':
    app = wx.GetApp() or wx.App(False)
    frame = TestFrame()
    app.MainLoop()
