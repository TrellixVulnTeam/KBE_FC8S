#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright (C) 2016-2021 ParaPy Holding B.V.
#
# This file is subject to the terms and conditions defined in
# the license agreement that you have received with this source code
#
# THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY
# KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR
# PURPOSE.

from numbers import Number

import wx

WX_VERSION = [int(s) for s in wx.__version__.split(".")[:3]]
WX_MAJOR_VERSION = WX_VERSION[0]


if WX_MAJOR_VERSION > 3:
    Validator = wx.Validator
    Validator_IsSilent = wx.Validator.IsSilent
    SystemSettings_GetColour = wx.SystemSettings.GetColour
else:
    Validator = wx.PyValidator
    Validator_IsSilent = wx.Validator_IsSilent
    SystemSettings_GetColour = wx.SystemSettings_GetColour


def AddTool(parent, *args, **kwargs):
    """Replace deprecated :func:`AddLabelTool` while maintaining backwards-
    compatibility with wxPython 3. NOTE: the first 3 input arguments of
    this function (`id`, `label`, and `bitmap`) are positional and
    cannot be passed as keyword arguments (as opposed to the deprecated
    function being replaced here).

    :param wx.ToolBar parent: The parent toolbar to add the tool to.
    :param int id: Tool identifier. If -1, will automatically create
        an identifier.
    :param string label: The string to be displayed with the tool.
    :param wx.Bitmap bitmap: The primary tool bitmap.
    :param wx.Bitmap bmpDisabled: Optional bitmap used when the tool is
        disabled (default: wx.NullBitmap).
    :param wx.ItemKind kind: Optional kind of the tool (default:
        wx.ITEM_NORMAL).
    :param str shortHelp: Optional string is used for the tools tooltip
        (default: empty string).
    :param str longHelp: Optional string is used for the tools tooltip
        (default: empty string).
    :param PyUserData clientData: An optional pointer to client data (
        default: None).
    """

    if WX_MAJOR_VERSION > 3:
        fn = getattr(parent, "AddTool", None)
    else:
        fn = getattr(parent, "AddLabelTool", None)
    return fn(*args, **kwargs)


def SetFrameSize(obj, *args, **kwargs):
    """Replace deprecated :func:`SetDimensions` while maintaining backwards-
    compatibility with wxPython 3.

    :param wx.Frame obj: The frame to resize/reposition.
    :param int x: x-position in pixels.
    :param int y: y-position in pixels.
    :param int width: Width in pixels.
    :param int height: Height in pixels.
    :param int sizeFlags: Optional indicator for interpretation of other
        parameters.
    """

    if WX_MAJOR_VERSION > 3:
        fn = getattr(obj, "SetSize", None)
    else:
        fn = getattr(obj, "SetDimensions", None)
    return fn(*args, **kwargs)


def SetSizeHints(window, *args, **kwargs):
    """SetSizeHintsSz support in wx3 and wx4"""
    if WX_MAJOR_VERSION > 3:
        meth = window.SetSizeHints
    else:
        if not args:
            raise ValueError("specify at least some positional args like minSize or minW")
        if isinstance(args[0], Number):
            meth = window.SetSizeHints
        else:  # wx.Size provided
            meth = window.SetSizeHintsSz

        return meth(*args, **kwargs)
