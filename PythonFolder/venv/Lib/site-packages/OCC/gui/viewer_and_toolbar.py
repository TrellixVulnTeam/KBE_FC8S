#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright (C) 2016-2021 ParaPy Holding B.V.
#
# This file is subject to the terms and conditions defined in
# the license agreement that you have received with this source code
#
# THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY
# KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR
# PURPOSE.

import os

import wx

from OCC.gui import wx34
from OCC.gui.utils import get_module_dir_when_frozen, is_frozen
from OCC.gui.viewer import Viewer, ViewerWindow

__all__ = ["ViewerWindow", "Viewer"]

if is_frozen():
    _file_dir = get_module_dir_when_frozen(__name__)
else:
    _file_dir = os.path.dirname(__file__)
ICN_DIR = os.path.join(_file_dir, "icons", "")


class ToolBarPanel(wx.Panel):
    def __init__(self, parent):
        #: :type: wx.ToolBar
        self.wx_toolbar = None
        #: :type: wx.ToolBarToolBase
        self.btn_iso_view = None
        #: :type: wx.ToolBarToolBase
        self.btn_right_view = None
        #: :type: wx.ToolBarToolBase
        self.btn_left_view = None
        #: :type: wx.ToolBarToolBase
        self.btn_front_view = None
        #: :type: wx.ToolBarToolBase
        self.btn_back_view = None
        #: :type: wx.ToolBarToolBase
        self.btn_top_view = None
        #: :type: wx.ToolBarToolBase
        self.btn_fit_all = None
        #: :type: wx.ToolBarToolBase
        self.btn_hide_all = None

        wx.Panel.__init__(self, parent, -1)
        self.init_toolbar()
        self.init_layout()

    def init_toolbar(self):

        sty = wx.TB_NODIVIDER
        toolbar = wx.ToolBar(self, wx.ID_ANY, wx.DefaultPosition,
                             wx.DefaultSize, sty)
        toolbar.SetToolSeparation(1)

        self.wx_toolbar = toolbar
        self.btn_iso_view = self.add_tool(
            "iso", os.path.join(ICN_DIR, "iso.png"), "iso view")
        self.btn_right_view = self.add_tool(
            "right", os.path.join(ICN_DIR, "right.png"), "right view (x+)")
        self.btn_left_view = self.add_tool(
            "left", os.path.join(ICN_DIR, "left.png"), "left view (x-)")
        self.btn_front_view = self.add_tool(
            "front", os.path.join(ICN_DIR, "front.png"), "front view (y-)")
        self.btn_back_view = self.add_tool(
            "back", os.path.join(ICN_DIR, "back.png"), "back view (y+)")
        self.btn_top_view = self.add_tool(
            "top", os.path.join(ICN_DIR, "top.png"), "top view (z+)")
        self.btn_bottom_view = self.add_tool(
            "bottom", os.path.join(ICN_DIR, "bottom.png"), "bottom view (z-)")
        self.btn_fit_all = self.add_tool(
            "fit", os.path.join(ICN_DIR, "fit.png"), "fit all ('F')")
        self.btn_hide_all = self.add_tool(
            "hide", os.path.join(ICN_DIR, "eraser.jpg"), "hide all ('C')")

        toolbar.Realize()

    def add_tool(self, label, image_path, helpstring):
        bitmap = wx.Bitmap(image_path, wx.BITMAP_TYPE_ANY)
        return wx34.AddTool(
            self.wx_toolbar, wx.ID_ANY, label, bitmap, wx.NullBitmap,
            wx.ITEM_NORMAL, helpstring, helpstring, None)

    def init_layout(self):
        sizer = wx.BoxSizer(wx.HORIZONTAL)
        sizer.AddStretchSpacer()
        sizer.Add(self.wx_toolbar, 0, wx.EXPAND, 5)
        sizer.AddStretchSpacer()

        self.SetSizer(sizer)
        self.Layout()

    def bind_viewer(self, viewer):
        self.Bind(wx.EVT_TOOL, lambda _: viewer.view_right(),
                  id=self.btn_right_view.GetId())
        self.Bind(wx.EVT_TOOL, lambda _: viewer.view_left(),
                  id=self.btn_left_view.GetId())
        self.Bind(wx.EVT_TOOL, lambda _: viewer.view_front(),
                  id=self.btn_front_view.GetId())
        self.Bind(wx.EVT_TOOL, lambda _: viewer.view_back(),
                  id=self.btn_back_view.GetId())
        self.Bind(wx.EVT_TOOL, lambda _: viewer.view_top(),
                  id=self.btn_top_view.GetId())
        self.Bind(wx.EVT_TOOL, lambda _: viewer.view_bottom(),
                  id=self.btn_bottom_view.GetId())
        self.Bind(wx.EVT_TOOL, lambda _: viewer.view_iso(),
                  id=self.btn_iso_view.GetId())
        self.Bind(wx.EVT_TOOL, lambda _: viewer.fit_all(),
                  id=self.btn_fit_all.GetId())
        self.Bind(wx.EVT_TOOL, lambda _: viewer.hide_all(),
                  id=self.btn_hide_all.GetId())


class ViewerWithToolbarPanel(wx.Panel):

    LABEL = "Geometry View"

    def __init__(self, parent):
        wx.Panel.__init__(self, parent, -1)

        self.viewer = Viewer(self)
        self.toolbar = ToolBarPanel(self)

        sizer = wx.BoxSizer(wx.VERTICAL)
        sizer.Add(self.viewer, 1, wx.EXPAND, 5)
        sizer.Add(self.toolbar, 0, wx.EXPAND, 0)
        self.SetSizer(sizer)
        self.Layout()

        self.toolbar.bind_viewer(self.viewer)


class ViewerWithToolbarWindow(wx.Frame):

    def __init__(self, title="ParaPy Graphical User Interface"):
        wx.Frame.__init__(self, None, -1, title)

        self.panel = ViewerWithToolbarPanel(self)

        self.viewer = self.panel.viewer
        self.toolbar = self.panel.toolbar

        sizer = wx.BoxSizer()
        sizer.Add(self.panel, 1, wx.EXPAND)

        self.SetSizer(sizer)
        self.SetAutoLayout(True)
        sizer.Layout()

        # important to show only after V3D_View has been created...
        self.Show(True)


if __name__ == '__main__':

    from OCC.wrapper.BRepPrimAPI import BRepPrimAPI_MakeBox, BRepPrimAPI_MakeSphere

    app = wx.GetApp() or wx.App(False)
    frame = ViewerWithToolbarWindow()
    viewer = frame.viewer

    box = BRepPrimAPI_MakeBox(10., 20., 30.)
    sphere = BRepPrimAPI_MakeSphere(10)

    viewer.display_topods_shape(box.Shape())
    viewer.display_topods_shape(sphere.Shape())
    app.MainLoop()


    class ViewerToolbarWindow(wx.Frame):
        def __init__(self):
            wx.Frame.__init__(self, None, -1,
                              "ParaPy Graphical User Interface")

            self.toolbar = ToolBarPanel(self)

            sizer = wx.BoxSizer(wx.VERTICAL)
            sizer.Add(self.toolbar, 1, wx.EXPAND)
            self.SetSizer(sizer)
            self.SetAutoLayout(True)
            sizer.Layout()

            # important to show only after V3D_View has been created...
            self.Show(True)

    frame = ViewerToolbarWindow()

    app.MainLoop()
