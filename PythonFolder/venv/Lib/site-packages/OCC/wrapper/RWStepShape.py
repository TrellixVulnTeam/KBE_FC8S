# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_RWStepShape')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_RWStepShape')
    _RWStepShape = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_RWStepShape', [dirname(__file__)])
        except ImportError:
            import _RWStepShape
            return _RWStepShape
        try:
            _mod = imp.load_module('_RWStepShape', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _RWStepShape = swig_import_helper()
    del swig_import_helper
else:
    import _RWStepShape
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _RWStepShape.delete_SwigPyIterator

    def value(self):
        return _RWStepShape.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _RWStepShape.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _RWStepShape.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _RWStepShape.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _RWStepShape.SwigPyIterator_equal(self, x)

    def copy(self):
        return _RWStepShape.SwigPyIterator_copy(self)

    def next(self):
        return _RWStepShape.SwigPyIterator_next(self)

    def __next__(self):
        return _RWStepShape.SwigPyIterator___next__(self)

    def previous(self):
        return _RWStepShape.SwigPyIterator_previous(self)

    def advance(self, n):
        return _RWStepShape.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _RWStepShape.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _RWStepShape.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _RWStepShape.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _RWStepShape.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _RWStepShape.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _RWStepShape.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self
SwigPyIterator_swigregister = _RWStepShape.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

class NCollection_CellFilter_InspectorXYZ(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Dimension = _RWStepShape.NCollection_CellFilter_InspectorXYZ_Dimension
    Coord = staticmethod(_RWStepShape.NCollection_CellFilter_InspectorXYZ_Coord)

    def Shift(self, thePnt, theTol):
        return _RWStepShape.NCollection_CellFilter_InspectorXYZ_Shift(self, thePnt, theTol)

    def __init__(self):
        this = _RWStepShape.new_NCollection_CellFilter_InspectorXYZ()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _RWStepShape.delete_NCollection_CellFilter_InspectorXYZ
NCollection_CellFilter_InspectorXYZ_swigregister = _RWStepShape.NCollection_CellFilter_InspectorXYZ_swigregister
NCollection_CellFilter_InspectorXYZ_swigregister(NCollection_CellFilter_InspectorXYZ)

def NCollection_CellFilter_InspectorXYZ_Coord(i, thePnt):
    return _RWStepShape.NCollection_CellFilter_InspectorXYZ_Coord(i, thePnt)
NCollection_CellFilter_InspectorXYZ_Coord = _RWStepShape.NCollection_CellFilter_InspectorXYZ_Coord

class NCollection_CellFilter_InspectorXY(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Dimension = _RWStepShape.NCollection_CellFilter_InspectorXY_Dimension
    Coord = staticmethod(_RWStepShape.NCollection_CellFilter_InspectorXY_Coord)

    def Shift(self, thePnt, theTol):
        return _RWStepShape.NCollection_CellFilter_InspectorXY_Shift(self, thePnt, theTol)

    def __init__(self):
        this = _RWStepShape.new_NCollection_CellFilter_InspectorXY()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _RWStepShape.delete_NCollection_CellFilter_InspectorXY
NCollection_CellFilter_InspectorXY_swigregister = _RWStepShape.NCollection_CellFilter_InspectorXY_swigregister
NCollection_CellFilter_InspectorXY_swigregister(NCollection_CellFilter_InspectorXY)

def NCollection_CellFilter_InspectorXY_Coord(i, thePnt):
    return _RWStepShape.NCollection_CellFilter_InspectorXY_Coord(i, thePnt)
NCollection_CellFilter_InspectorXY_Coord = _RWStepShape.NCollection_CellFilter_InspectorXY_Coord


def ptr_to_number(item):
    return _RWStepShape.ptr_to_number(item)
ptr_to_number = _RWStepShape.ptr_to_number

def HashCode(*args):
    return _RWStepShape.HashCode(*args)
HashCode = _RWStepShape.HashCode

def ptr_equal(a, b):
    return _RWStepShape.ptr_equal(a, b)
ptr_equal = _RWStepShape.ptr_equal
from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import Interface
else:
    import Interface
del _swig_python_version_info
from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import NCollection
else:
    import NCollection
del _swig_python_version_info
from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import Standard
else:
    import Standard
del _swig_python_version_info
from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import TColStd
else:
    import TColStd
del _swig_python_version_info
from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import TCollection
else:
    import TCollection
del _swig_python_version_info
from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import MoniTool
else:
    import MoniTool
del _swig_python_version_info
from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import TopoDS
else:
    import TopoDS
del _swig_python_version_info
from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import TopAbs
else:
    import TopAbs
del _swig_python_version_info
from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import Message
else:
    import Message
del _swig_python_version_info
from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import TopLoc
else:
    import TopLoc
del _swig_python_version_info
from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import gp
else:
    import gp
del _swig_python_version_info
from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import OSD
else:
    import OSD
del _swig_python_version_info
from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import Quantity
else:
    import Quantity
del _swig_python_version_info
from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import TopTools
else:
    import TopTools
del _swig_python_version_info
from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import Bnd
else:
    import Bnd
del _swig_python_version_info
from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import TColgp
else:
    import TColgp
del _swig_python_version_info
from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import StepShape
else:
    import StepShape
del _swig_python_version_info
from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import StepBasic
else:
    import StepBasic
del _swig_python_version_info
from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import StepData
else:
    import StepData
del _swig_python_version_info
from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import StepGeom
else:
    import StepGeom
del _swig_python_version_info
from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import StepRepr
else:
    import StepRepr
del _swig_python_version_info
class RWStepShape_RWFacetedBrep(object):
    """Read & Write Module for FacetedBrep"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWFacetedBrep self) -> RWStepShape_RWFacetedBrep

        Read & Write Module for FacetedBrep
        """
        this = _RWStepShape.new_RWStepShape_RWFacetedBrep(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWFacetedBrep self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_FacetedBrep ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_FacetedBrep

        """
        return _RWStepShape.RWStepShape_RWFacetedBrep_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWFacetedBrep self, StepData_StepWriter SW, Handle_StepShape_FacetedBrep ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_FacetedBrep

        """
        return _RWStepShape.RWStepShape_RWFacetedBrep_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWFacetedBrep self, Handle_StepShape_FacetedBrep ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_FacetedBrep
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWFacetedBrep_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWFacetedBrep
RWStepShape_RWFacetedBrep_swigregister = _RWStepShape.RWStepShape_RWFacetedBrep_swigregister
RWStepShape_RWFacetedBrep_swigregister(RWStepShape_RWFacetedBrep)

class RWStepShape_RWSweptFaceSolid(object):
    """Read & Write Module for SweptFaceSolid"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWSweptFaceSolid self) -> RWStepShape_RWSweptFaceSolid

        Read & Write Module for SweptFaceSolid
        """
        this = _RWStepShape.new_RWStepShape_RWSweptFaceSolid(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWSweptFaceSolid self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_SweptFaceSolid ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_SweptFaceSolid

        """
        return _RWStepShape.RWStepShape_RWSweptFaceSolid_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWSweptFaceSolid self, StepData_StepWriter SW, Handle_StepShape_SweptFaceSolid ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_SweptFaceSolid

        """
        return _RWStepShape.RWStepShape_RWSweptFaceSolid_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWSweptFaceSolid self, Handle_StepShape_SweptFaceSolid ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_SweptFaceSolid
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWSweptFaceSolid_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWSweptFaceSolid
RWStepShape_RWSweptFaceSolid_swigregister = _RWStepShape.RWStepShape_RWSweptFaceSolid_swigregister
RWStepShape_RWSweptFaceSolid_swigregister(RWStepShape_RWSweptFaceSolid)

class RWStepShape_RWBoxedHalfSpace(object):
    """Read & Write Module for BoxedHalfSpace"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWBoxedHalfSpace self) -> RWStepShape_RWBoxedHalfSpace

        Read & Write Module for BoxedHalfSpace
        """
        this = _RWStepShape.new_RWStepShape_RWBoxedHalfSpace(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWBoxedHalfSpace self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_BoxedHalfSpace ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_BoxedHalfSpace

        """
        return _RWStepShape.RWStepShape_RWBoxedHalfSpace_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWBoxedHalfSpace self, StepData_StepWriter SW, Handle_StepShape_BoxedHalfSpace ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_BoxedHalfSpace

        """
        return _RWStepShape.RWStepShape_RWBoxedHalfSpace_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWBoxedHalfSpace self, Handle_StepShape_BoxedHalfSpace ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_BoxedHalfSpace
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWBoxedHalfSpace_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWBoxedHalfSpace
RWStepShape_RWBoxedHalfSpace_swigregister = _RWStepShape.RWStepShape_RWBoxedHalfSpace_swigregister
RWStepShape_RWBoxedHalfSpace_swigregister(RWStepShape_RWBoxedHalfSpace)

class RWStepShape_RWPointRepresentation(object):
    """Read & Write tool for PointRepresentation"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWPointRepresentation self) -> RWStepShape_RWPointRepresentation

        Empty constructor


        """
        this = _RWStepShape.new_RWStepShape_RWPointRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWPointRepresentation self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_PointRepresentation ent)

        Reads PointRepresentation

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_PointRepresentation

        """
        return _RWStepShape.RWStepShape_RWPointRepresentation_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWPointRepresentation self, StepData_StepWriter SW, Handle_StepShape_PointRepresentation ent)

        Writes PointRepresentation

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_PointRepresentation

        """
        return _RWStepShape.RWStepShape_RWPointRepresentation_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWPointRepresentation self, Handle_StepShape_PointRepresentation ent, Interface_EntityIterator iter)

        Fills data for graph (shared items)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_PointRepresentation
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWPointRepresentation_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWPointRepresentation
RWStepShape_RWPointRepresentation_swigregister = _RWStepShape.RWStepShape_RWPointRepresentation_swigregister
RWStepShape_RWPointRepresentation_swigregister(RWStepShape_RWPointRepresentation)

class RWStepShape_RWTorus(object):
    """Read & Write Module for Torus"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWTorus self) -> RWStepShape_RWTorus

        Read & Write Module for Torus
        """
        this = _RWStepShape.new_RWStepShape_RWTorus(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWTorus self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_Torus ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Torus

        """
        return _RWStepShape.RWStepShape_RWTorus_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWTorus self, StepData_StepWriter SW, Handle_StepShape_Torus ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Torus

        """
        return _RWStepShape.RWStepShape_RWTorus_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWTorus self, Handle_StepShape_Torus ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Torus
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWTorus_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWTorus
RWStepShape_RWTorus_swigregister = _RWStepShape.RWStepShape_RWTorus_swigregister
RWStepShape_RWTorus_swigregister(RWStepShape_RWTorus)

class RWStepShape_RWFaceOuterBound(object):
    """Read & Write Module for FaceOuterBound"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWFaceOuterBound self) -> RWStepShape_RWFaceOuterBound

        Read & Write Module for FaceOuterBound
        """
        this = _RWStepShape.new_RWStepShape_RWFaceOuterBound(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWFaceOuterBound self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_FaceOuterBound ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_FaceOuterBound

        """
        return _RWStepShape.RWStepShape_RWFaceOuterBound_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWFaceOuterBound self, StepData_StepWriter SW, Handle_StepShape_FaceOuterBound ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_FaceOuterBound

        """
        return _RWStepShape.RWStepShape_RWFaceOuterBound_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWFaceOuterBound self, Handle_StepShape_FaceOuterBound ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_FaceOuterBound
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWFaceOuterBound_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWFaceOuterBound
RWStepShape_RWFaceOuterBound_swigregister = _RWStepShape.RWStepShape_RWFaceOuterBound_swigregister
RWStepShape_RWFaceOuterBound_swigregister(RWStepShape_RWFaceOuterBound)

class RWStepShape_RWDimensionalCharacteristicRepresentation(object):
    """Read & Write tool for DimensionalCharacteristicRepresentation"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWDimensionalCharacteristicRepresentation self) -> RWStepShape_RWDimensionalCharacteristicRepresentation

        Empty constructor


        """
        this = _RWStepShape.new_RWStepShape_RWDimensionalCharacteristicRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWDimensionalCharacteristicRepresentation self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_DimensionalCharacteristicRepresentation ent)

        Reads DimensionalCharacteristicRepresentation

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_DimensionalCharacteristicRepresentation

        """
        return _RWStepShape.RWStepShape_RWDimensionalCharacteristicRepresentation_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWDimensionalCharacteristicRepresentation self, StepData_StepWriter SW, Handle_StepShape_DimensionalCharacteristicRepresentation ent)

        Writes DimensionalCharacteristicRepresentation

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_DimensionalCharacteristicRepresentation

        """
        return _RWStepShape.RWStepShape_RWDimensionalCharacteristicRepresentation_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWDimensionalCharacteristicRepresentation self, Handle_StepShape_DimensionalCharacteristicRepresentation ent, Interface_EntityIterator iter)

        Fills data for graph (shared items)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_DimensionalCharacteristicRepresentation
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWDimensionalCharacteristicRepresentation_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWDimensionalCharacteristicRepresentation
RWStepShape_RWDimensionalCharacteristicRepresentation_swigregister = _RWStepShape.RWStepShape_RWDimensionalCharacteristicRepresentation_swigregister
RWStepShape_RWDimensionalCharacteristicRepresentation_swigregister(RWStepShape_RWDimensionalCharacteristicRepresentation)

class RWStepShape_RWLoopAndPath(object):
    """Read & Write Module for LoopAndPath"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWLoopAndPath self) -> RWStepShape_RWLoopAndPath

        Read & Write Module for LoopAndPath
        """
        this = _RWStepShape.new_RWStepShape_RWLoopAndPath(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWLoopAndPath self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_LoopAndPath ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_LoopAndPath

        """
        return _RWStepShape.RWStepShape_RWLoopAndPath_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWLoopAndPath self, StepData_StepWriter SW, Handle_StepShape_LoopAndPath ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_LoopAndPath

        """
        return _RWStepShape.RWStepShape_RWLoopAndPath_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWLoopAndPath self, Handle_StepShape_LoopAndPath ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_LoopAndPath
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWLoopAndPath_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWLoopAndPath
RWStepShape_RWLoopAndPath_swigregister = _RWStepShape.RWStepShape_RWLoopAndPath_swigregister
RWStepShape_RWLoopAndPath_swigregister(RWStepShape_RWLoopAndPath)

class RWStepShape_RWHalfSpaceSolid(object):
    """Read & Write Module for HalfSpaceSolid"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWHalfSpaceSolid self) -> RWStepShape_RWHalfSpaceSolid

        Read & Write Module for HalfSpaceSolid
        """
        this = _RWStepShape.new_RWStepShape_RWHalfSpaceSolid(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWHalfSpaceSolid self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_HalfSpaceSolid ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_HalfSpaceSolid

        """
        return _RWStepShape.RWStepShape_RWHalfSpaceSolid_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWHalfSpaceSolid self, StepData_StepWriter SW, Handle_StepShape_HalfSpaceSolid ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_HalfSpaceSolid

        """
        return _RWStepShape.RWStepShape_RWHalfSpaceSolid_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWHalfSpaceSolid self, Handle_StepShape_HalfSpaceSolid ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_HalfSpaceSolid
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWHalfSpaceSolid_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWHalfSpaceSolid
RWStepShape_RWHalfSpaceSolid_swigregister = _RWStepShape.RWStepShape_RWHalfSpaceSolid_swigregister
RWStepShape_RWHalfSpaceSolid_swigregister(RWStepShape_RWHalfSpaceSolid)

class RWStepShape_RWGeometricCurveSet(object):
    """Read & Write Module for GeometricCurveSet"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWGeometricCurveSet self) -> RWStepShape_RWGeometricCurveSet

        Read & Write Module for GeometricCurveSet
        """
        this = _RWStepShape.new_RWStepShape_RWGeometricCurveSet(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWGeometricCurveSet self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_GeometricCurveSet ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_GeometricCurveSet

        """
        return _RWStepShape.RWStepShape_RWGeometricCurveSet_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWGeometricCurveSet self, StepData_StepWriter SW, Handle_StepShape_GeometricCurveSet ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_GeometricCurveSet

        """
        return _RWStepShape.RWStepShape_RWGeometricCurveSet_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWGeometricCurveSet self, Handle_StepShape_GeometricCurveSet ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_GeometricCurveSet
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWGeometricCurveSet_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWGeometricCurveSet
RWStepShape_RWGeometricCurveSet_swigregister = _RWStepShape.RWStepShape_RWGeometricCurveSet_swigregister
RWStepShape_RWGeometricCurveSet_swigregister(RWStepShape_RWGeometricCurveSet)

class RWStepShape_RWAngularLocation(object):
    """Read & Write tool for AngularLocation"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWAngularLocation self) -> RWStepShape_RWAngularLocation

        Empty constructor


        """
        this = _RWStepShape.new_RWStepShape_RWAngularLocation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWAngularLocation self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_AngularLocation ent)

        Reads AngularLocation

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_AngularLocation

        """
        return _RWStepShape.RWStepShape_RWAngularLocation_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWAngularLocation self, StepData_StepWriter SW, Handle_StepShape_AngularLocation ent)

        Writes AngularLocation

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_AngularLocation

        """
        return _RWStepShape.RWStepShape_RWAngularLocation_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWAngularLocation self, Handle_StepShape_AngularLocation ent, Interface_EntityIterator iter)

        Fills data for graph (shared items)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_AngularLocation
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWAngularLocation_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWAngularLocation
RWStepShape_RWAngularLocation_swigregister = _RWStepShape.RWStepShape_RWAngularLocation_swigregister
RWStepShape_RWAngularLocation_swigregister(RWStepShape_RWAngularLocation)

class RWStepShape_RWDimensionalLocationWithPath(object):
    """Read & Write tool for DimensionalLocationWithPath"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWDimensionalLocationWithPath self) -> RWStepShape_RWDimensionalLocationWithPath

        Empty constructor


        """
        this = _RWStepShape.new_RWStepShape_RWDimensionalLocationWithPath(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWDimensionalLocationWithPath self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_DimensionalLocationWithPath ent)

        Reads DimensionalLocationWithPath

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_DimensionalLocationWithPath

        """
        return _RWStepShape.RWStepShape_RWDimensionalLocationWithPath_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWDimensionalLocationWithPath self, StepData_StepWriter SW, Handle_StepShape_DimensionalLocationWithPath ent)

        Writes DimensionalLocationWithPath

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_DimensionalLocationWithPath

        """
        return _RWStepShape.RWStepShape_RWDimensionalLocationWithPath_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWDimensionalLocationWithPath self, Handle_StepShape_DimensionalLocationWithPath ent, Interface_EntityIterator iter)

        Fills data for graph (shared items)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_DimensionalLocationWithPath
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWDimensionalLocationWithPath_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWDimensionalLocationWithPath
RWStepShape_RWDimensionalLocationWithPath_swigregister = _RWStepShape.RWStepShape_RWDimensionalLocationWithPath_swigregister
RWStepShape_RWDimensionalLocationWithPath_swigregister(RWStepShape_RWDimensionalLocationWithPath)

class RWStepShape_RWAdvancedFace(object):
    """Read & Write Module for AdvancedFace"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWAdvancedFace self) -> RWStepShape_RWAdvancedFace

        Read & Write Module for AdvancedFace
        """
        this = _RWStepShape.new_RWStepShape_RWAdvancedFace(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWAdvancedFace self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_AdvancedFace ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_AdvancedFace

        """
        return _RWStepShape.RWStepShape_RWAdvancedFace_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWAdvancedFace self, StepData_StepWriter SW, Handle_StepShape_AdvancedFace ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_AdvancedFace

        """
        return _RWStepShape.RWStepShape_RWAdvancedFace_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWAdvancedFace self, Handle_StepShape_AdvancedFace ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_AdvancedFace
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWAdvancedFace_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWAdvancedFace
RWStepShape_RWAdvancedFace_swigregister = _RWStepShape.RWStepShape_RWAdvancedFace_swigregister
RWStepShape_RWAdvancedFace_swigregister(RWStepShape_RWAdvancedFace)

class RWStepShape_RWGeometricSet(object):
    """Read & Write Module for GeometricSet"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWGeometricSet self) -> RWStepShape_RWGeometricSet

        Read & Write Module for GeometricSet
        """
        this = _RWStepShape.new_RWStepShape_RWGeometricSet(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWGeometricSet self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_GeometricSet ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_GeometricSet

        """
        return _RWStepShape.RWStepShape_RWGeometricSet_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWGeometricSet self, StepData_StepWriter SW, Handle_StepShape_GeometricSet ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_GeometricSet

        """
        return _RWStepShape.RWStepShape_RWGeometricSet_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWGeometricSet self, Handle_StepShape_GeometricSet ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_GeometricSet
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWGeometricSet_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWGeometricSet
RWStepShape_RWGeometricSet_swigregister = _RWStepShape.RWStepShape_RWGeometricSet_swigregister
RWStepShape_RWGeometricSet_swigregister(RWStepShape_RWGeometricSet)

class RWStepShape_RWEdgeCurve(object):
    """
    Read & Write Module for EdgeCurve
    Check added by CKY , 7-OCT-1996
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWEdgeCurve self) -> RWStepShape_RWEdgeCurve

        Read & Write Module for EdgeCurve
        Check added by CKY , 7-OCT-1996
        """
        this = _RWStepShape.new_RWStepShape_RWEdgeCurve(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWEdgeCurve self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_EdgeCurve ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_EdgeCurve

        """
        return _RWStepShape.RWStepShape_RWEdgeCurve_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWEdgeCurve self, StepData_StepWriter SW, Handle_StepShape_EdgeCurve ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_EdgeCurve

        """
        return _RWStepShape.RWStepShape_RWEdgeCurve_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWEdgeCurve self, Handle_StepShape_EdgeCurve ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_EdgeCurve
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWEdgeCurve_Share(self, *args)


    def Check(self, *args):
        """
        Check(RWStepShape_RWEdgeCurve self, Handle_StepShape_EdgeCurve ent, Interface_ShareTool shares, Handle_Interface_Check ach)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_EdgeCurve
        :type shares: OCC.wrapper.Interface.Interface_ShareTool
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check

        """
        return _RWStepShape.RWStepShape_RWEdgeCurve_Check(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWEdgeCurve
RWStepShape_RWEdgeCurve_swigregister = _RWStepShape.RWStepShape_RWEdgeCurve_swigregister
RWStepShape_RWEdgeCurve_swigregister(RWStepShape_RWEdgeCurve)

class RWStepShape_RWGeometricallyBoundedSurfaceShapeRepresentation(object):
    """Read & Write Module for GeometricallyBoundedSurfaceShapeRepresentation"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWGeometricallyBoundedSurfaceShapeRepresentation self) -> RWStepShape_RWGeometricallyBoundedSurfaceShapeRepresentation

        Read & Write Module for GeometricallyBoundedSurfaceShapeRepresentation
        """
        this = _RWStepShape.new_RWStepShape_RWGeometricallyBoundedSurfaceShapeRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWGeometricallyBoundedSurfaceShapeRepresentation self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWGeometricallyBoundedSurfaceShapeRepresentation_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWGeometricallyBoundedSurfaceShapeRepresentation self, StepData_StepWriter SW, Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWGeometricallyBoundedSurfaceShapeRepresentation_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWGeometricallyBoundedSurfaceShapeRepresentation self, Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWGeometricallyBoundedSurfaceShapeRepresentation_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWGeometricallyBoundedSurfaceShapeRepresentation
RWStepShape_RWGeometricallyBoundedSurfaceShapeRepresentation_swigregister = _RWStepShape.RWStepShape_RWGeometricallyBoundedSurfaceShapeRepresentation_swigregister
RWStepShape_RWGeometricallyBoundedSurfaceShapeRepresentation_swigregister(RWStepShape_RWGeometricallyBoundedSurfaceShapeRepresentation)

class RWStepShape_RWQualifiedRepresentationItem(object):
    """Read & Write Module for QualifiedRepresentationItem"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWQualifiedRepresentationItem self) -> RWStepShape_RWQualifiedRepresentationItem

        Read & Write Module for QualifiedRepresentationItem
        """
        this = _RWStepShape.new_RWStepShape_RWQualifiedRepresentationItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWQualifiedRepresentationItem self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_QualifiedRepresentationItem ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.RWStepShape.Handle_StepShape_QualifiedRepresentationItem

        """
        return _RWStepShape.RWStepShape_RWQualifiedRepresentationItem_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWQualifiedRepresentationItem self, StepData_StepWriter SW, Handle_StepShape_QualifiedRepresentationItem ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.RWStepShape.Handle_StepShape_QualifiedRepresentationItem

        """
        return _RWStepShape.RWStepShape_RWQualifiedRepresentationItem_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWQualifiedRepresentationItem self, Handle_StepShape_QualifiedRepresentationItem ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.RWStepShape.Handle_StepShape_QualifiedRepresentationItem
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWQualifiedRepresentationItem_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWQualifiedRepresentationItem
RWStepShape_RWQualifiedRepresentationItem_swigregister = _RWStepShape.RWStepShape_RWQualifiedRepresentationItem_swigregister
RWStepShape_RWQualifiedRepresentationItem_swigregister(RWStepShape_RWQualifiedRepresentationItem)

class RWStepShape_RWConnectedFaceSubSet(object):
    """Read & Write tool for ConnectedFaceSubSet"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWConnectedFaceSubSet self) -> RWStepShape_RWConnectedFaceSubSet

        Empty constructor


        """
        this = _RWStepShape.new_RWStepShape_RWConnectedFaceSubSet(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWConnectedFaceSubSet self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_ConnectedFaceSubSet ent)

        Reads ConnectedFaceSubSet

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ConnectedFaceSubSet

        """
        return _RWStepShape.RWStepShape_RWConnectedFaceSubSet_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWConnectedFaceSubSet self, StepData_StepWriter SW, Handle_StepShape_ConnectedFaceSubSet ent)

        Writes ConnectedFaceSubSet

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ConnectedFaceSubSet

        """
        return _RWStepShape.RWStepShape_RWConnectedFaceSubSet_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWConnectedFaceSubSet self, Handle_StepShape_ConnectedFaceSubSet ent, Interface_EntityIterator iter)

        Fills data for graph (shared items)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ConnectedFaceSubSet
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWConnectedFaceSubSet_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWConnectedFaceSubSet
RWStepShape_RWConnectedFaceSubSet_swigregister = _RWStepShape.RWStepShape_RWConnectedFaceSubSet_swigregister
RWStepShape_RWConnectedFaceSubSet_swigregister(RWStepShape_RWConnectedFaceSubSet)

class RWStepShape_RWFaceSurface(object):
    """Read & Write Module for FaceSurface"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWFaceSurface self) -> RWStepShape_RWFaceSurface

        Read & Write Module for FaceSurface
        """
        this = _RWStepShape.new_RWStepShape_RWFaceSurface(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWFaceSurface self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_FaceSurface ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_FaceSurface

        """
        return _RWStepShape.RWStepShape_RWFaceSurface_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWFaceSurface self, StepData_StepWriter SW, Handle_StepShape_FaceSurface ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_FaceSurface

        """
        return _RWStepShape.RWStepShape_RWFaceSurface_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWFaceSurface self, Handle_StepShape_FaceSurface ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_FaceSurface
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWFaceSurface_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWFaceSurface
RWStepShape_RWFaceSurface_swigregister = _RWStepShape.RWStepShape_RWFaceSurface_swigregister
RWStepShape_RWFaceSurface_swigregister(RWStepShape_RWFaceSurface)

class RWStepShape_RWRevolvedAreaSolid(object):
    """Read & Write Module for RevolvedAreaSolid"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWRevolvedAreaSolid self) -> RWStepShape_RWRevolvedAreaSolid

        Read & Write Module for RevolvedAreaSolid
        """
        this = _RWStepShape.new_RWStepShape_RWRevolvedAreaSolid(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWRevolvedAreaSolid self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_RevolvedAreaSolid ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_RevolvedAreaSolid

        """
        return _RWStepShape.RWStepShape_RWRevolvedAreaSolid_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWRevolvedAreaSolid self, StepData_StepWriter SW, Handle_StepShape_RevolvedAreaSolid ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_RevolvedAreaSolid

        """
        return _RWStepShape.RWStepShape_RWRevolvedAreaSolid_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWRevolvedAreaSolid self, Handle_StepShape_RevolvedAreaSolid ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_RevolvedAreaSolid
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWRevolvedAreaSolid_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWRevolvedAreaSolid
RWStepShape_RWRevolvedAreaSolid_swigregister = _RWStepShape.RWStepShape_RWRevolvedAreaSolid_swigregister
RWStepShape_RWRevolvedAreaSolid_swigregister(RWStepShape_RWRevolvedAreaSolid)

class RWStepShape_RWAdvancedBrepShapeRepresentation(object):
    """Read & Write Module for AdvancedBrepShapeRepresentation"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWAdvancedBrepShapeRepresentation self) -> RWStepShape_RWAdvancedBrepShapeRepresentation

        Read & Write Module for AdvancedBrepShapeRepresentation
        """
        this = _RWStepShape.new_RWStepShape_RWAdvancedBrepShapeRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWAdvancedBrepShapeRepresentation self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_AdvancedBrepShapeRepresentation ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_AdvancedBrepShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWAdvancedBrepShapeRepresentation_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWAdvancedBrepShapeRepresentation self, StepData_StepWriter SW, Handle_StepShape_AdvancedBrepShapeRepresentation ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_AdvancedBrepShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWAdvancedBrepShapeRepresentation_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWAdvancedBrepShapeRepresentation self, Handle_StepShape_AdvancedBrepShapeRepresentation ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_AdvancedBrepShapeRepresentation
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWAdvancedBrepShapeRepresentation_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWAdvancedBrepShapeRepresentation
RWStepShape_RWAdvancedBrepShapeRepresentation_swigregister = _RWStepShape.RWStepShape_RWAdvancedBrepShapeRepresentation_swigregister
RWStepShape_RWAdvancedBrepShapeRepresentation_swigregister(RWStepShape_RWAdvancedBrepShapeRepresentation)

class RWStepShape_RWLimitsAndFits(object):
    """Read & Write Module for LimitsAndFits"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWLimitsAndFits self) -> RWStepShape_RWLimitsAndFits

        Read & Write Module for LimitsAndFits
        """
        this = _RWStepShape.new_RWStepShape_RWLimitsAndFits(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWLimitsAndFits self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_LimitsAndFits ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_LimitsAndFits

        """
        return _RWStepShape.RWStepShape_RWLimitsAndFits_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWLimitsAndFits self, StepData_StepWriter SW, Handle_StepShape_LimitsAndFits ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_LimitsAndFits

        """
        return _RWStepShape.RWStepShape_RWLimitsAndFits_WriteStep(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWLimitsAndFits
RWStepShape_RWLimitsAndFits_swigregister = _RWStepShape.RWStepShape_RWLimitsAndFits_swigregister
RWStepShape_RWLimitsAndFits_swigregister(RWStepShape_RWLimitsAndFits)

class RWStepShape_RWEdgeLoop(object):
    """
    Read & Write Module for EdgeLoop
    Check added by CKY , 7-OCT-1996
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWEdgeLoop self) -> RWStepShape_RWEdgeLoop

        Read & Write Module for EdgeLoop
        Check added by CKY , 7-OCT-1996
        """
        this = _RWStepShape.new_RWStepShape_RWEdgeLoop(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWEdgeLoop self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_EdgeLoop ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_EdgeLoop

        """
        return _RWStepShape.RWStepShape_RWEdgeLoop_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWEdgeLoop self, StepData_StepWriter SW, Handle_StepShape_EdgeLoop ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_EdgeLoop

        """
        return _RWStepShape.RWStepShape_RWEdgeLoop_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWEdgeLoop self, Handle_StepShape_EdgeLoop ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_EdgeLoop
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWEdgeLoop_Share(self, *args)


    def Check(self, *args):
        """
        Check(RWStepShape_RWEdgeLoop self, Handle_StepShape_EdgeLoop ent, Interface_ShareTool shares, Handle_Interface_Check ach)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_EdgeLoop
        :type shares: OCC.wrapper.Interface.Interface_ShareTool
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check

        """
        return _RWStepShape.RWStepShape_RWEdgeLoop_Check(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWEdgeLoop
RWStepShape_RWEdgeLoop_swigregister = _RWStepShape.RWStepShape_RWEdgeLoop_swigregister
RWStepShape_RWEdgeLoop_swigregister(RWStepShape_RWEdgeLoop)

class RWStepShape_RWAngularSize(object):
    """Read & Write tool for AngularSize"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWAngularSize self) -> RWStepShape_RWAngularSize

        Empty constructor


        """
        this = _RWStepShape.new_RWStepShape_RWAngularSize(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWAngularSize self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_AngularSize ent)

        Reads AngularSize

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_AngularSize

        """
        return _RWStepShape.RWStepShape_RWAngularSize_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWAngularSize self, StepData_StepWriter SW, Handle_StepShape_AngularSize ent)

        Writes AngularSize

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_AngularSize

        """
        return _RWStepShape.RWStepShape_RWAngularSize_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWAngularSize self, Handle_StepShape_AngularSize ent, Interface_EntityIterator iter)

        Fills data for graph (shared items)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_AngularSize
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWAngularSize_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWAngularSize
RWStepShape_RWAngularSize_swigregister = _RWStepShape.RWStepShape_RWAngularSize_swigregister
RWStepShape_RWAngularSize_swigregister(RWStepShape_RWAngularSize)

class RWStepShape_RWSweptAreaSolid(object):
    """Read & Write Module for SweptAreaSolid"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWSweptAreaSolid self) -> RWStepShape_RWSweptAreaSolid

        Read & Write Module for SweptAreaSolid
        """
        this = _RWStepShape.new_RWStepShape_RWSweptAreaSolid(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWSweptAreaSolid self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_SweptAreaSolid ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_SweptAreaSolid

        """
        return _RWStepShape.RWStepShape_RWSweptAreaSolid_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWSweptAreaSolid self, StepData_StepWriter SW, Handle_StepShape_SweptAreaSolid ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_SweptAreaSolid

        """
        return _RWStepShape.RWStepShape_RWSweptAreaSolid_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWSweptAreaSolid self, Handle_StepShape_SweptAreaSolid ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_SweptAreaSolid
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWSweptAreaSolid_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWSweptAreaSolid
RWStepShape_RWSweptAreaSolid_swigregister = _RWStepShape.RWStepShape_RWSweptAreaSolid_swigregister
RWStepShape_RWSweptAreaSolid_swigregister(RWStepShape_RWSweptAreaSolid)

class RWStepShape_RWConnectedEdgeSet(object):
    """Read & Write tool for ConnectedEdgeSet"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWConnectedEdgeSet self) -> RWStepShape_RWConnectedEdgeSet

        Empty constructor


        """
        this = _RWStepShape.new_RWStepShape_RWConnectedEdgeSet(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWConnectedEdgeSet self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_ConnectedEdgeSet ent)

        Reads ConnectedEdgeSet

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ConnectedEdgeSet

        """
        return _RWStepShape.RWStepShape_RWConnectedEdgeSet_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWConnectedEdgeSet self, StepData_StepWriter SW, Handle_StepShape_ConnectedEdgeSet ent)

        Writes ConnectedEdgeSet

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ConnectedEdgeSet

        """
        return _RWStepShape.RWStepShape_RWConnectedEdgeSet_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWConnectedEdgeSet self, Handle_StepShape_ConnectedEdgeSet ent, Interface_EntityIterator iter)

        Fills data for graph (shared items)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ConnectedEdgeSet
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWConnectedEdgeSet_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWConnectedEdgeSet
RWStepShape_RWConnectedEdgeSet_swigregister = _RWStepShape.RWStepShape_RWConnectedEdgeSet_swigregister
RWStepShape_RWConnectedEdgeSet_swigregister(RWStepShape_RWConnectedEdgeSet)

class RWStepShape_RWPath(object):
    """Read & Write Module for Path"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWPath self) -> RWStepShape_RWPath

        Read & Write Module for Path
        """
        this = _RWStepShape.new_RWStepShape_RWPath(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWPath self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_Path ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Path

        """
        return _RWStepShape.RWStepShape_RWPath_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWPath self, StepData_StepWriter SW, Handle_StepShape_Path ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Path

        """
        return _RWStepShape.RWStepShape_RWPath_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWPath self, Handle_StepShape_Path ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Path
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWPath_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWPath
RWStepShape_RWPath_swigregister = _RWStepShape.RWStepShape_RWPath_swigregister
RWStepShape_RWPath_swigregister(RWStepShape_RWPath)

class RWStepShape_RWShellBasedSurfaceModel(object):
    """Read & Write Module for ShellBasedSurfaceModel"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWShellBasedSurfaceModel self) -> RWStepShape_RWShellBasedSurfaceModel

        Read & Write Module for ShellBasedSurfaceModel
        """
        this = _RWStepShape.new_RWStepShape_RWShellBasedSurfaceModel(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWShellBasedSurfaceModel self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_ShellBasedSurfaceModel ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ShellBasedSurfaceModel

        """
        return _RWStepShape.RWStepShape_RWShellBasedSurfaceModel_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWShellBasedSurfaceModel self, StepData_StepWriter SW, Handle_StepShape_ShellBasedSurfaceModel ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ShellBasedSurfaceModel

        """
        return _RWStepShape.RWStepShape_RWShellBasedSurfaceModel_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWShellBasedSurfaceModel self, Handle_StepShape_ShellBasedSurfaceModel ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ShellBasedSurfaceModel
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWShellBasedSurfaceModel_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWShellBasedSurfaceModel
RWStepShape_RWShellBasedSurfaceModel_swigregister = _RWStepShape.RWStepShape_RWShellBasedSurfaceModel_swigregister
RWStepShape_RWShellBasedSurfaceModel_swigregister(RWStepShape_RWShellBasedSurfaceModel)

class RWStepShape_RWEdgeBasedWireframeModel(object):
    """Read & Write tool for EdgeBasedWireframeModel"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWEdgeBasedWireframeModel self) -> RWStepShape_RWEdgeBasedWireframeModel

        Empty constructor


        """
        this = _RWStepShape.new_RWStepShape_RWEdgeBasedWireframeModel(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWEdgeBasedWireframeModel self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_EdgeBasedWireframeModel ent)

        Reads EdgeBasedWireframeModel

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_EdgeBasedWireframeModel

        """
        return _RWStepShape.RWStepShape_RWEdgeBasedWireframeModel_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWEdgeBasedWireframeModel self, StepData_StepWriter SW, Handle_StepShape_EdgeBasedWireframeModel ent)

        Writes EdgeBasedWireframeModel

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_EdgeBasedWireframeModel

        """
        return _RWStepShape.RWStepShape_RWEdgeBasedWireframeModel_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWEdgeBasedWireframeModel self, Handle_StepShape_EdgeBasedWireframeModel ent, Interface_EntityIterator iter)

        Fills data for graph (shared items)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_EdgeBasedWireframeModel
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWEdgeBasedWireframeModel_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWEdgeBasedWireframeModel
RWStepShape_RWEdgeBasedWireframeModel_swigregister = _RWStepShape.RWStepShape_RWEdgeBasedWireframeModel_swigregister
RWStepShape_RWEdgeBasedWireframeModel_swigregister(RWStepShape_RWEdgeBasedWireframeModel)

class RWStepShape_RWSphere(object):
    """Read & Write Module for Sphere"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWSphere self) -> RWStepShape_RWSphere

        Read & Write Module for Sphere
        """
        this = _RWStepShape.new_RWStepShape_RWSphere(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWSphere self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_Sphere ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Sphere

        """
        return _RWStepShape.RWStepShape_RWSphere_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWSphere self, StepData_StepWriter SW, Handle_StepShape_Sphere ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Sphere

        """
        return _RWStepShape.RWStepShape_RWSphere_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWSphere self, Handle_StepShape_Sphere ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Sphere
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWSphere_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWSphere
RWStepShape_RWSphere_swigregister = _RWStepShape.RWStepShape_RWSphere_swigregister
RWStepShape_RWSphere_swigregister(RWStepShape_RWSphere)

class RWStepShape_RWSubface(object):
    """Read & Write tool for Subface"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWSubface self) -> RWStepShape_RWSubface

        Empty constructor


        """
        this = _RWStepShape.new_RWStepShape_RWSubface(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWSubface self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_Subface ent)

        Reads Subface

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Subface

        """
        return _RWStepShape.RWStepShape_RWSubface_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWSubface self, StepData_StepWriter SW, Handle_StepShape_Subface ent)

        Writes Subface

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Subface

        """
        return _RWStepShape.RWStepShape_RWSubface_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWSubface self, Handle_StepShape_Subface ent, Interface_EntityIterator iter)

        Fills data for graph (shared items)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Subface
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWSubface_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWSubface
RWStepShape_RWSubface_swigregister = _RWStepShape.RWStepShape_RWSubface_swigregister
RWStepShape_RWSubface_swigregister(RWStepShape_RWSubface)

class RWStepShape_RWPrecisionQualifier(object):
    """Read & Write Module for PrecisionQualifier"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWPrecisionQualifier self) -> RWStepShape_RWPrecisionQualifier

        Read & Write Module for PrecisionQualifier
        """
        this = _RWStepShape.new_RWStepShape_RWPrecisionQualifier(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWPrecisionQualifier self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_PrecisionQualifier ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_PrecisionQualifier

        """
        return _RWStepShape.RWStepShape_RWPrecisionQualifier_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWPrecisionQualifier self, StepData_StepWriter SW, Handle_StepShape_PrecisionQualifier ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_PrecisionQualifier

        """
        return _RWStepShape.RWStepShape_RWPrecisionQualifier_WriteStep(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWPrecisionQualifier
RWStepShape_RWPrecisionQualifier_swigregister = _RWStepShape.RWStepShape_RWPrecisionQualifier_swigregister
RWStepShape_RWPrecisionQualifier_swigregister(RWStepShape_RWPrecisionQualifier)

class RWStepShape_RWSolidModel(object):
    """Read & Write Module for SolidModel"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWSolidModel self) -> RWStepShape_RWSolidModel

        Read & Write Module for SolidModel
        """
        this = _RWStepShape.new_RWStepShape_RWSolidModel(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWSolidModel self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_SolidModel ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_SolidModel

        """
        return _RWStepShape.RWStepShape_RWSolidModel_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWSolidModel self, StepData_StepWriter SW, Handle_StepShape_SolidModel ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_SolidModel

        """
        return _RWStepShape.RWStepShape_RWSolidModel_WriteStep(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWSolidModel
RWStepShape_RWSolidModel_swigregister = _RWStepShape.RWStepShape_RWSolidModel_swigregister
RWStepShape_RWSolidModel_swigregister(RWStepShape_RWSolidModel)

class RWStepShape_RWGeometricallyBoundedWireframeShapeRepresentation(object):
    """Read & Write Module for GeometricallyBoundedWireframeShapeRepresentation"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWGeometricallyBoundedWireframeShapeRepresentation self) -> RWStepShape_RWGeometricallyBoundedWireframeShapeRepresentation

        Read & Write Module for GeometricallyBoundedWireframeShapeRepresentation
        """
        this = _RWStepShape.new_RWStepShape_RWGeometricallyBoundedWireframeShapeRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWGeometricallyBoundedWireframeShapeRepresentation self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWGeometricallyBoundedWireframeShapeRepresentation_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWGeometricallyBoundedWireframeShapeRepresentation self, StepData_StepWriter SW, Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWGeometricallyBoundedWireframeShapeRepresentation_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWGeometricallyBoundedWireframeShapeRepresentation self, Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWGeometricallyBoundedWireframeShapeRepresentation_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWGeometricallyBoundedWireframeShapeRepresentation
RWStepShape_RWGeometricallyBoundedWireframeShapeRepresentation_swigregister = _RWStepShape.RWStepShape_RWGeometricallyBoundedWireframeShapeRepresentation_swigregister
RWStepShape_RWGeometricallyBoundedWireframeShapeRepresentation_swigregister(RWStepShape_RWGeometricallyBoundedWireframeShapeRepresentation)

class RWStepShape_RWOrientedFace(object):
    """Read & Write Module for OrientedFace"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWOrientedFace self) -> RWStepShape_RWOrientedFace

        Read & Write Module for OrientedFace
        """
        this = _RWStepShape.new_RWStepShape_RWOrientedFace(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWOrientedFace self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_OrientedFace ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_OrientedFace

        """
        return _RWStepShape.RWStepShape_RWOrientedFace_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWOrientedFace self, StepData_StepWriter SW, Handle_StepShape_OrientedFace ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_OrientedFace

        """
        return _RWStepShape.RWStepShape_RWOrientedFace_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWOrientedFace self, Handle_StepShape_OrientedFace ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_OrientedFace
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWOrientedFace_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWOrientedFace
RWStepShape_RWOrientedFace_swigregister = _RWStepShape.RWStepShape_RWOrientedFace_swigregister
RWStepShape_RWOrientedFace_swigregister(RWStepShape_RWOrientedFace)

class RWStepShape_RWRevolvedFaceSolid(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """__init__(RWStepShape_RWRevolvedFaceSolid self) -> RWStepShape_RWRevolvedFaceSolid"""
        this = _RWStepShape.new_RWStepShape_RWRevolvedFaceSolid(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWRevolvedFaceSolid self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_RevolvedFaceSolid ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_RevolvedFaceSolid

        """
        return _RWStepShape.RWStepShape_RWRevolvedFaceSolid_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWRevolvedFaceSolid self, StepData_StepWriter SW, Handle_StepShape_RevolvedFaceSolid ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_RevolvedFaceSolid

        """
        return _RWStepShape.RWStepShape_RWRevolvedFaceSolid_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWRevolvedFaceSolid self, Handle_StepShape_RevolvedFaceSolid ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_RevolvedFaceSolid
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWRevolvedFaceSolid_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWRevolvedFaceSolid
RWStepShape_RWRevolvedFaceSolid_swigregister = _RWStepShape.RWStepShape_RWRevolvedFaceSolid_swigregister
RWStepShape_RWRevolvedFaceSolid_swigregister(RWStepShape_RWRevolvedFaceSolid)

class RWStepShape_RWPlusMinusTolerance(object):
    """Read & Write Module for PlusMinusTolerance"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWPlusMinusTolerance self) -> RWStepShape_RWPlusMinusTolerance

        Read & Write Module for PlusMinusTolerance
        """
        this = _RWStepShape.new_RWStepShape_RWPlusMinusTolerance(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWPlusMinusTolerance self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_PlusMinusTolerance ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_PlusMinusTolerance

        """
        return _RWStepShape.RWStepShape_RWPlusMinusTolerance_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWPlusMinusTolerance self, StepData_StepWriter SW, Handle_StepShape_PlusMinusTolerance ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_PlusMinusTolerance

        """
        return _RWStepShape.RWStepShape_RWPlusMinusTolerance_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWPlusMinusTolerance self, Handle_StepShape_PlusMinusTolerance ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_PlusMinusTolerance
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWPlusMinusTolerance_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWPlusMinusTolerance
RWStepShape_RWPlusMinusTolerance_swigregister = _RWStepShape.RWStepShape_RWPlusMinusTolerance_swigregister
RWStepShape_RWPlusMinusTolerance_swigregister(RWStepShape_RWPlusMinusTolerance)

class RWStepShape_RWBooleanResult(object):
    """Read & Write Module for BooleanResult"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWBooleanResult self) -> RWStepShape_RWBooleanResult

        Read & Write Module for BooleanResult
        """
        this = _RWStepShape.new_RWStepShape_RWBooleanResult(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWBooleanResult self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_BooleanResult ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_BooleanResult

        """
        return _RWStepShape.RWStepShape_RWBooleanResult_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWBooleanResult self, StepData_StepWriter SW, Handle_StepShape_BooleanResult ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_BooleanResult

        """
        return _RWStepShape.RWStepShape_RWBooleanResult_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWBooleanResult self, Handle_StepShape_BooleanResult ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_BooleanResult
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWBooleanResult_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWBooleanResult
RWStepShape_RWBooleanResult_swigregister = _RWStepShape.RWStepShape_RWBooleanResult_swigregister
RWStepShape_RWBooleanResult_swigregister(RWStepShape_RWBooleanResult)

class RWStepShape_RWFacetedBrepShapeRepresentation(object):
    """Read & Write Module for FacetedBrepShapeRepresentation"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWFacetedBrepShapeRepresentation self) -> RWStepShape_RWFacetedBrepShapeRepresentation

        Read & Write Module for FacetedBrepShapeRepresentation
        """
        this = _RWStepShape.new_RWStepShape_RWFacetedBrepShapeRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWFacetedBrepShapeRepresentation self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_FacetedBrepShapeRepresentation ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_FacetedBrepShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWFacetedBrepShapeRepresentation_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWFacetedBrepShapeRepresentation self, StepData_StepWriter SW, Handle_StepShape_FacetedBrepShapeRepresentation ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_FacetedBrepShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWFacetedBrepShapeRepresentation_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWFacetedBrepShapeRepresentation self, Handle_StepShape_FacetedBrepShapeRepresentation ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_FacetedBrepShapeRepresentation
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWFacetedBrepShapeRepresentation_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWFacetedBrepShapeRepresentation
RWStepShape_RWFacetedBrepShapeRepresentation_swigregister = _RWStepShape.RWStepShape_RWFacetedBrepShapeRepresentation_swigregister
RWStepShape_RWFacetedBrepShapeRepresentation_swigregister(RWStepShape_RWFacetedBrepShapeRepresentation)

class RWStepShape_RWFaceBound(object):
    """
    Read & Write Module for FaceBound
    Check added by CKY , 7-OCT-1996
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWFaceBound self) -> RWStepShape_RWFaceBound

        Read & Write Module for FaceBound
        Check added by CKY , 7-OCT-1996
        """
        this = _RWStepShape.new_RWStepShape_RWFaceBound(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWFaceBound self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_FaceBound ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_FaceBound

        """
        return _RWStepShape.RWStepShape_RWFaceBound_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWFaceBound self, StepData_StepWriter SW, Handle_StepShape_FaceBound ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_FaceBound

        """
        return _RWStepShape.RWStepShape_RWFaceBound_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWFaceBound self, Handle_StepShape_FaceBound ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_FaceBound
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWFaceBound_Share(self, *args)


    def Check(self, *args):
        """
        Check(RWStepShape_RWFaceBound self, Handle_StepShape_FaceBound ent, Interface_ShareTool shares, Handle_Interface_Check ach)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_FaceBound
        :type shares: OCC.wrapper.Interface.Interface_ShareTool
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check

        """
        return _RWStepShape.RWStepShape_RWFaceBound_Check(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWFaceBound
RWStepShape_RWFaceBound_swigregister = _RWStepShape.RWStepShape_RWFaceBound_swigregister
RWStepShape_RWFaceBound_swigregister(RWStepShape_RWFaceBound)

class RWStepShape_RWSubedge(object):
    """Read & Write tool for Subedge"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWSubedge self) -> RWStepShape_RWSubedge

        Empty constructor


        """
        this = _RWStepShape.new_RWStepShape_RWSubedge(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWSubedge self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_Subedge ent)

        Reads Subedge

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Subedge

        """
        return _RWStepShape.RWStepShape_RWSubedge_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWSubedge self, StepData_StepWriter SW, Handle_StepShape_Subedge ent)

        Writes Subedge

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Subedge

        """
        return _RWStepShape.RWStepShape_RWSubedge_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWSubedge self, Handle_StepShape_Subedge ent, Interface_EntityIterator iter)

        Fills data for graph (shared items)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Subedge
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWSubedge_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWSubedge
RWStepShape_RWSubedge_swigregister = _RWStepShape.RWStepShape_RWSubedge_swigregister
RWStepShape_RWSubedge_swigregister(RWStepShape_RWSubedge)

class RWStepShape_RWTypeQualifier(object):
    """Read & Write Module for TypeQualifier"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWTypeQualifier self) -> RWStepShape_RWTypeQualifier

        Read & Write Module for TypeQualifier
        """
        this = _RWStepShape.new_RWStepShape_RWTypeQualifier(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWTypeQualifier self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_TypeQualifier ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_TypeQualifier

        """
        return _RWStepShape.RWStepShape_RWTypeQualifier_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWTypeQualifier self, StepData_StepWriter SW, Handle_StepShape_TypeQualifier ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_TypeQualifier

        """
        return _RWStepShape.RWStepShape_RWTypeQualifier_WriteStep(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWTypeQualifier
RWStepShape_RWTypeQualifier_swigregister = _RWStepShape.RWStepShape_RWTypeQualifier_swigregister
RWStepShape_RWTypeQualifier_swigregister(RWStepShape_RWTypeQualifier)

class RWStepShape_RWExtrudedFaceSolid(object):
    """Read & Write Module for ExtrudedFaceSolid"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWExtrudedFaceSolid self) -> RWStepShape_RWExtrudedFaceSolid

        Read & Write Module for ExtrudedFaceSolid
        """
        this = _RWStepShape.new_RWStepShape_RWExtrudedFaceSolid(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWExtrudedFaceSolid self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_ExtrudedFaceSolid ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ExtrudedFaceSolid

        """
        return _RWStepShape.RWStepShape_RWExtrudedFaceSolid_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWExtrudedFaceSolid self, StepData_StepWriter SW, Handle_StepShape_ExtrudedFaceSolid ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ExtrudedFaceSolid

        """
        return _RWStepShape.RWStepShape_RWExtrudedFaceSolid_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWExtrudedFaceSolid self, Handle_StepShape_ExtrudedFaceSolid ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ExtrudedFaceSolid
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWExtrudedFaceSolid_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWExtrudedFaceSolid
RWStepShape_RWExtrudedFaceSolid_swigregister = _RWStepShape.RWStepShape_RWExtrudedFaceSolid_swigregister
RWStepShape_RWExtrudedFaceSolid_swigregister(RWStepShape_RWExtrudedFaceSolid)

class RWStepShape_RWTopologicalRepresentationItem(object):
    """Read & Write Module for TopologicalRepresentationItem"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWTopologicalRepresentationItem self) -> RWStepShape_RWTopologicalRepresentationItem

        Read & Write Module for TopologicalRepresentationItem
        """
        this = _RWStepShape.new_RWStepShape_RWTopologicalRepresentationItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWTopologicalRepresentationItem self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_TopologicalRepresentationItem ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_TopologicalRepresentationItem

        """
        return _RWStepShape.RWStepShape_RWTopologicalRepresentationItem_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWTopologicalRepresentationItem self, StepData_StepWriter SW, Handle_StepShape_TopologicalRepresentationItem ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_TopologicalRepresentationItem

        """
        return _RWStepShape.RWStepShape_RWTopologicalRepresentationItem_WriteStep(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWTopologicalRepresentationItem
RWStepShape_RWTopologicalRepresentationItem_swigregister = _RWStepShape.RWStepShape_RWTopologicalRepresentationItem_swigregister
RWStepShape_RWTopologicalRepresentationItem_swigregister(RWStepShape_RWTopologicalRepresentationItem)

class RWStepShape_RWRightAngularWedge(object):
    """Read & Write Module for RightAngularWedge"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWRightAngularWedge self) -> RWStepShape_RWRightAngularWedge

        Read & Write Module for RightAngularWedge
        """
        this = _RWStepShape.new_RWStepShape_RWRightAngularWedge(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWRightAngularWedge self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_RightAngularWedge ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_RightAngularWedge

        """
        return _RWStepShape.RWStepShape_RWRightAngularWedge_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWRightAngularWedge self, StepData_StepWriter SW, Handle_StepShape_RightAngularWedge ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_RightAngularWedge

        """
        return _RWStepShape.RWStepShape_RWRightAngularWedge_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWRightAngularWedge self, Handle_StepShape_RightAngularWedge ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_RightAngularWedge
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWRightAngularWedge_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWRightAngularWedge
RWStepShape_RWRightAngularWedge_swigregister = _RWStepShape.RWStepShape_RWRightAngularWedge_swigregister
RWStepShape_RWRightAngularWedge_swigregister(RWStepShape_RWRightAngularWedge)

class RWStepShape_RWPolyLoop(object):
    """Read & Write Module for PolyLoop"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWPolyLoop self) -> RWStepShape_RWPolyLoop

        Read & Write Module for PolyLoop
        """
        this = _RWStepShape.new_RWStepShape_RWPolyLoop(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWPolyLoop self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_PolyLoop ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_PolyLoop

        """
        return _RWStepShape.RWStepShape_RWPolyLoop_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWPolyLoop self, StepData_StepWriter SW, Handle_StepShape_PolyLoop ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_PolyLoop

        """
        return _RWStepShape.RWStepShape_RWPolyLoop_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWPolyLoop self, Handle_StepShape_PolyLoop ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_PolyLoop
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWPolyLoop_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWPolyLoop
RWStepShape_RWPolyLoop_swigregister = _RWStepShape.RWStepShape_RWPolyLoop_swigregister
RWStepShape_RWPolyLoop_swigregister(RWStepShape_RWPolyLoop)

class RWStepShape_RWTransitionalShapeRepresentation(object):
    """Read & Write Module for TransitionalShapeRepresentation"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWTransitionalShapeRepresentation self) -> RWStepShape_RWTransitionalShapeRepresentation

        Read & Write Module for TransitionalShapeRepresentation
        """
        this = _RWStepShape.new_RWStepShape_RWTransitionalShapeRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWTransitionalShapeRepresentation self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_TransitionalShapeRepresentation ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_TransitionalShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWTransitionalShapeRepresentation_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWTransitionalShapeRepresentation self, StepData_StepWriter SW, Handle_StepShape_TransitionalShapeRepresentation ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_TransitionalShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWTransitionalShapeRepresentation_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWTransitionalShapeRepresentation self, Handle_StepShape_TransitionalShapeRepresentation ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_TransitionalShapeRepresentation
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWTransitionalShapeRepresentation_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWTransitionalShapeRepresentation
RWStepShape_RWTransitionalShapeRepresentation_swigregister = _RWStepShape.RWStepShape_RWTransitionalShapeRepresentation_swigregister
RWStepShape_RWTransitionalShapeRepresentation_swigregister(RWStepShape_RWTransitionalShapeRepresentation)

class RWStepShape_RWConnectedFaceSet(object):
    """Read & Write Module for ConnectedFaceSet"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWConnectedFaceSet self) -> RWStepShape_RWConnectedFaceSet

        Read & Write Module for ConnectedFaceSet
        """
        this = _RWStepShape.new_RWStepShape_RWConnectedFaceSet(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWConnectedFaceSet self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_ConnectedFaceSet ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ConnectedFaceSet

        """
        return _RWStepShape.RWStepShape_RWConnectedFaceSet_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWConnectedFaceSet self, StepData_StepWriter SW, Handle_StepShape_ConnectedFaceSet ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ConnectedFaceSet

        """
        return _RWStepShape.RWStepShape_RWConnectedFaceSet_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWConnectedFaceSet self, Handle_StepShape_ConnectedFaceSet ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ConnectedFaceSet
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWConnectedFaceSet_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWConnectedFaceSet
RWStepShape_RWConnectedFaceSet_swigregister = _RWStepShape.RWStepShape_RWConnectedFaceSet_swigregister
RWStepShape_RWConnectedFaceSet_swigregister(RWStepShape_RWConnectedFaceSet)

class RWStepShape_RWClosedShell(object):
    """Read & Write Module for ClosedShell"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWClosedShell self) -> RWStepShape_RWClosedShell

        Read & Write Module for ClosedShell
        """
        this = _RWStepShape.new_RWStepShape_RWClosedShell(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWClosedShell self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_ClosedShell ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ClosedShell

        """
        return _RWStepShape.RWStepShape_RWClosedShell_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWClosedShell self, StepData_StepWriter SW, Handle_StepShape_ClosedShell ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ClosedShell

        """
        return _RWStepShape.RWStepShape_RWClosedShell_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWClosedShell self, Handle_StepShape_ClosedShell ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ClosedShell
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWClosedShell_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWClosedShell
RWStepShape_RWClosedShell_swigregister = _RWStepShape.RWStepShape_RWClosedShell_swigregister
RWStepShape_RWClosedShell_swigregister(RWStepShape_RWClosedShell)

class RWStepShape_RWSolidReplica(object):
    """Read & Write Module for SolidReplica"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWSolidReplica self) -> RWStepShape_RWSolidReplica

        Read & Write Module for SolidReplica
        """
        this = _RWStepShape.new_RWStepShape_RWSolidReplica(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWSolidReplica self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_SolidReplica ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_SolidReplica

        """
        return _RWStepShape.RWStepShape_RWSolidReplica_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWSolidReplica self, StepData_StepWriter SW, Handle_StepShape_SolidReplica ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_SolidReplica

        """
        return _RWStepShape.RWStepShape_RWSolidReplica_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWSolidReplica self, Handle_StepShape_SolidReplica ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_SolidReplica
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWSolidReplica_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWSolidReplica
RWStepShape_RWSolidReplica_swigregister = _RWStepShape.RWStepShape_RWSolidReplica_swigregister
RWStepShape_RWSolidReplica_swigregister(RWStepShape_RWSolidReplica)

class RWStepShape_RWExtrudedAreaSolid(object):
    """Read & Write Module for ExtrudedAreaSolid"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWExtrudedAreaSolid self) -> RWStepShape_RWExtrudedAreaSolid

        Read & Write Module for ExtrudedAreaSolid
        """
        this = _RWStepShape.new_RWStepShape_RWExtrudedAreaSolid(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWExtrudedAreaSolid self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_ExtrudedAreaSolid ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ExtrudedAreaSolid

        """
        return _RWStepShape.RWStepShape_RWExtrudedAreaSolid_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWExtrudedAreaSolid self, StepData_StepWriter SW, Handle_StepShape_ExtrudedAreaSolid ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ExtrudedAreaSolid

        """
        return _RWStepShape.RWStepShape_RWExtrudedAreaSolid_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWExtrudedAreaSolid self, Handle_StepShape_ExtrudedAreaSolid ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ExtrudedAreaSolid
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWExtrudedAreaSolid_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWExtrudedAreaSolid
RWStepShape_RWExtrudedAreaSolid_swigregister = _RWStepShape.RWStepShape_RWExtrudedAreaSolid_swigregister
RWStepShape_RWExtrudedAreaSolid_swigregister(RWStepShape_RWExtrudedAreaSolid)

class RWStepShape_RWOrientedOpenShell(object):
    """Read & Write Module for OrientedOpenShell"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWOrientedOpenShell self) -> RWStepShape_RWOrientedOpenShell

        Read & Write Module for OrientedOpenShell
        """
        this = _RWStepShape.new_RWStepShape_RWOrientedOpenShell(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWOrientedOpenShell self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_OrientedOpenShell ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_OrientedOpenShell

        """
        return _RWStepShape.RWStepShape_RWOrientedOpenShell_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWOrientedOpenShell self, StepData_StepWriter SW, Handle_StepShape_OrientedOpenShell ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_OrientedOpenShell

        """
        return _RWStepShape.RWStepShape_RWOrientedOpenShell_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWOrientedOpenShell self, Handle_StepShape_OrientedOpenShell ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_OrientedOpenShell
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWOrientedOpenShell_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWOrientedOpenShell
RWStepShape_RWOrientedOpenShell_swigregister = _RWStepShape.RWStepShape_RWOrientedOpenShell_swigregister
RWStepShape_RWOrientedOpenShell_swigregister(RWStepShape_RWOrientedOpenShell)

class RWStepShape_RWVertexLoop(object):
    """Read & Write Module for VertexLoop"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWVertexLoop self) -> RWStepShape_RWVertexLoop

        Read & Write Module for VertexLoop
        """
        this = _RWStepShape.new_RWStepShape_RWVertexLoop(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWVertexLoop self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_VertexLoop ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_VertexLoop

        """
        return _RWStepShape.RWStepShape_RWVertexLoop_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWVertexLoop self, StepData_StepWriter SW, Handle_StepShape_VertexLoop ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_VertexLoop

        """
        return _RWStepShape.RWStepShape_RWVertexLoop_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWVertexLoop self, Handle_StepShape_VertexLoop ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_VertexLoop
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWVertexLoop_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWVertexLoop
RWStepShape_RWVertexLoop_swigregister = _RWStepShape.RWStepShape_RWVertexLoop_swigregister
RWStepShape_RWVertexLoop_swigregister(RWStepShape_RWVertexLoop)

class RWStepShape_RWEdge(object):
    """Read & Write Module for Edge"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWEdge self) -> RWStepShape_RWEdge

        Read & Write Module for Edge
        """
        this = _RWStepShape.new_RWStepShape_RWEdge(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWEdge self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_Edge ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Edge

        """
        return _RWStepShape.RWStepShape_RWEdge_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWEdge self, StepData_StepWriter SW, Handle_StepShape_Edge ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Edge

        """
        return _RWStepShape.RWStepShape_RWEdge_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWEdge self, Handle_StepShape_Edge ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Edge
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWEdge_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWEdge
RWStepShape_RWEdge_swigregister = _RWStepShape.RWStepShape_RWEdge_swigregister
RWStepShape_RWEdge_swigregister(RWStepShape_RWEdge)

class RWStepShape_RWValueFormatTypeQualifier(object):
    """Read & Write tool for ValueFormatTypeQualifier"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWValueFormatTypeQualifier self) -> RWStepShape_RWValueFormatTypeQualifier

        Empty constructor


        """
        this = _RWStepShape.new_RWStepShape_RWValueFormatTypeQualifier(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWValueFormatTypeQualifier self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_ValueFormatTypeQualifier ent)

        Reads ValueFormatTypeQualifier

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ValueFormatTypeQualifier

        """
        return _RWStepShape.RWStepShape_RWValueFormatTypeQualifier_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWValueFormatTypeQualifier self, StepData_StepWriter SW, Handle_StepShape_ValueFormatTypeQualifier ent)

        Writes ValueFormatTypeQualifier

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ValueFormatTypeQualifier

        """
        return _RWStepShape.RWStepShape_RWValueFormatTypeQualifier_WriteStep(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWValueFormatTypeQualifier
RWStepShape_RWValueFormatTypeQualifier_swigregister = _RWStepShape.RWStepShape_RWValueFormatTypeQualifier_swigregister
RWStepShape_RWValueFormatTypeQualifier_swigregister(RWStepShape_RWValueFormatTypeQualifier)

class RWStepShape_RWFaceBasedSurfaceModel(object):
    """Read & Write tool for FaceBasedSurfaceModel"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWFaceBasedSurfaceModel self) -> RWStepShape_RWFaceBasedSurfaceModel

        Empty constructor


        """
        this = _RWStepShape.new_RWStepShape_RWFaceBasedSurfaceModel(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWFaceBasedSurfaceModel self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_FaceBasedSurfaceModel ent)

        Reads FaceBasedSurfaceModel

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_FaceBasedSurfaceModel

        """
        return _RWStepShape.RWStepShape_RWFaceBasedSurfaceModel_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWFaceBasedSurfaceModel self, StepData_StepWriter SW, Handle_StepShape_FaceBasedSurfaceModel ent)

        Writes FaceBasedSurfaceModel

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_FaceBasedSurfaceModel

        """
        return _RWStepShape.RWStepShape_RWFaceBasedSurfaceModel_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWFaceBasedSurfaceModel self, Handle_StepShape_FaceBasedSurfaceModel ent, Interface_EntityIterator iter)

        Fills data for graph (shared items)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_FaceBasedSurfaceModel
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWFaceBasedSurfaceModel_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWFaceBasedSurfaceModel
RWStepShape_RWFaceBasedSurfaceModel_swigregister = _RWStepShape.RWStepShape_RWFaceBasedSurfaceModel_swigregister
RWStepShape_RWFaceBasedSurfaceModel_swigregister(RWStepShape_RWFaceBasedSurfaceModel)

class RWStepShape_RWBlock(object):
    """Read & Write Module for Block"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWBlock self) -> RWStepShape_RWBlock

        Read & Write Module for Block
        """
        this = _RWStepShape.new_RWStepShape_RWBlock(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWBlock self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_Block ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Block

        """
        return _RWStepShape.RWStepShape_RWBlock_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWBlock self, StepData_StepWriter SW, Handle_StepShape_Block ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Block

        """
        return _RWStepShape.RWStepShape_RWBlock_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWBlock self, Handle_StepShape_Block ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Block
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWBlock_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWBlock
RWStepShape_RWBlock_swigregister = _RWStepShape.RWStepShape_RWBlock_swigregister
RWStepShape_RWBlock_swigregister(RWStepShape_RWBlock)

class RWStepShape_RWVertexPoint(object):
    """Read & Write Module for VertexPoint"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWVertexPoint self) -> RWStepShape_RWVertexPoint

        Read & Write Module for VertexPoint
        """
        this = _RWStepShape.new_RWStepShape_RWVertexPoint(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWVertexPoint self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_VertexPoint ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_VertexPoint

        """
        return _RWStepShape.RWStepShape_RWVertexPoint_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWVertexPoint self, StepData_StepWriter SW, Handle_StepShape_VertexPoint ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_VertexPoint

        """
        return _RWStepShape.RWStepShape_RWVertexPoint_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWVertexPoint self, Handle_StepShape_VertexPoint ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_VertexPoint
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWVertexPoint_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWVertexPoint
RWStepShape_RWVertexPoint_swigregister = _RWStepShape.RWStepShape_RWVertexPoint_swigregister
RWStepShape_RWVertexPoint_swigregister(RWStepShape_RWVertexPoint)

class RWStepShape_RWToleranceValue(object):
    """Read & Write Module for ToleranceValue"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWToleranceValue self) -> RWStepShape_RWToleranceValue

        Read & Write Module for ToleranceValue
        """
        this = _RWStepShape.new_RWStepShape_RWToleranceValue(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWToleranceValue self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_ToleranceValue ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ToleranceValue

        """
        return _RWStepShape.RWStepShape_RWToleranceValue_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWToleranceValue self, StepData_StepWriter SW, Handle_StepShape_ToleranceValue ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ToleranceValue

        """
        return _RWStepShape.RWStepShape_RWToleranceValue_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWToleranceValue self, Handle_StepShape_ToleranceValue ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ToleranceValue
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWToleranceValue_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWToleranceValue
RWStepShape_RWToleranceValue_swigregister = _RWStepShape.RWStepShape_RWToleranceValue_swigregister
RWStepShape_RWToleranceValue_swigregister(RWStepShape_RWToleranceValue)

class RWStepShape_RWVertex(object):
    """Read & Write Module for Vertex"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWVertex self) -> RWStepShape_RWVertex

        Read & Write Module for Vertex
        """
        this = _RWStepShape.new_RWStepShape_RWVertex(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWVertex self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_Vertex ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Vertex

        """
        return _RWStepShape.RWStepShape_RWVertex_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWVertex self, StepData_StepWriter SW, Handle_StepShape_Vertex ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Vertex

        """
        return _RWStepShape.RWStepShape_RWVertex_WriteStep(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWVertex
RWStepShape_RWVertex_swigregister = _RWStepShape.RWStepShape_RWVertex_swigregister
RWStepShape_RWVertex_swigregister(RWStepShape_RWVertex)

class RWStepShape_RWShapeRepresentation(object):
    """Read & Write Module for ShapeRepresentation"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWShapeRepresentation self) -> RWStepShape_RWShapeRepresentation

        Read & Write Module for ShapeRepresentation
        """
        this = _RWStepShape.new_RWStepShape_RWShapeRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWShapeRepresentation self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_ShapeRepresentation ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWShapeRepresentation_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWShapeRepresentation self, StepData_StepWriter SW, Handle_StepShape_ShapeRepresentation ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWShapeRepresentation_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWShapeRepresentation self, Handle_StepShape_ShapeRepresentation ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ShapeRepresentation
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWShapeRepresentation_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWShapeRepresentation
RWStepShape_RWShapeRepresentation_swigregister = _RWStepShape.RWStepShape_RWShapeRepresentation_swigregister
RWStepShape_RWShapeRepresentation_swigregister(RWStepShape_RWShapeRepresentation)

class RWStepShape_RWOpenShell(object):
    """Read & Write Module for OpenShell"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWOpenShell self) -> RWStepShape_RWOpenShell

        Read & Write Module for OpenShell
        """
        this = _RWStepShape.new_RWStepShape_RWOpenShell(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWOpenShell self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_OpenShell ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_OpenShell

        """
        return _RWStepShape.RWStepShape_RWOpenShell_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWOpenShell self, StepData_StepWriter SW, Handle_StepShape_OpenShell ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_OpenShell

        """
        return _RWStepShape.RWStepShape_RWOpenShell_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWOpenShell self, Handle_StepShape_OpenShell ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_OpenShell
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWOpenShell_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWOpenShell
RWStepShape_RWOpenShell_swigregister = _RWStepShape.RWStepShape_RWOpenShell_swigregister
RWStepShape_RWOpenShell_swigregister(RWStepShape_RWOpenShell)

class RWStepShape_RWOrientedPath(object):
    """Read & Write Module for OrientedPath"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWOrientedPath self) -> RWStepShape_RWOrientedPath

        Read & Write Module for OrientedPath
        """
        this = _RWStepShape.new_RWStepShape_RWOrientedPath(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWOrientedPath self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_OrientedPath ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_OrientedPath

        """
        return _RWStepShape.RWStepShape_RWOrientedPath_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWOrientedPath self, StepData_StepWriter SW, Handle_StepShape_OrientedPath ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_OrientedPath

        """
        return _RWStepShape.RWStepShape_RWOrientedPath_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWOrientedPath self, Handle_StepShape_OrientedPath ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_OrientedPath
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWOrientedPath_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWOrientedPath
RWStepShape_RWOrientedPath_swigregister = _RWStepShape.RWStepShape_RWOrientedPath_swigregister
RWStepShape_RWOrientedPath_swigregister(RWStepShape_RWOrientedPath)

class RWStepShape_RWManifoldSolidBrep(object):
    """Read & Write Module for ManifoldSolidBrep"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWManifoldSolidBrep self) -> RWStepShape_RWManifoldSolidBrep

        Read & Write Module for ManifoldSolidBrep
        """
        this = _RWStepShape.new_RWStepShape_RWManifoldSolidBrep(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWManifoldSolidBrep self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_ManifoldSolidBrep ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ManifoldSolidBrep

        """
        return _RWStepShape.RWStepShape_RWManifoldSolidBrep_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWManifoldSolidBrep self, StepData_StepWriter SW, Handle_StepShape_ManifoldSolidBrep ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ManifoldSolidBrep

        """
        return _RWStepShape.RWStepShape_RWManifoldSolidBrep_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWManifoldSolidBrep self, Handle_StepShape_ManifoldSolidBrep ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ManifoldSolidBrep
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWManifoldSolidBrep_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWManifoldSolidBrep
RWStepShape_RWManifoldSolidBrep_swigregister = _RWStepShape.RWStepShape_RWManifoldSolidBrep_swigregister
RWStepShape_RWManifoldSolidBrep_swigregister(RWStepShape_RWManifoldSolidBrep)

class RWStepShape_RWCsgSolid(object):
    """Read & Write Module for CsgSolid"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWCsgSolid self) -> RWStepShape_RWCsgSolid

        Read & Write Module for CsgSolid
        """
        this = _RWStepShape.new_RWStepShape_RWCsgSolid(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWCsgSolid self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_CsgSolid ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_CsgSolid

        """
        return _RWStepShape.RWStepShape_RWCsgSolid_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWCsgSolid self, StepData_StepWriter SW, Handle_StepShape_CsgSolid ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_CsgSolid

        """
        return _RWStepShape.RWStepShape_RWCsgSolid_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWCsgSolid self, Handle_StepShape_CsgSolid ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_CsgSolid
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWCsgSolid_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWCsgSolid
RWStepShape_RWCsgSolid_swigregister = _RWStepShape.RWStepShape_RWCsgSolid_swigregister
RWStepShape_RWCsgSolid_swigregister(RWStepShape_RWCsgSolid)

class RWStepShape_RWConnectedFaceShapeRepresentation(object):
    """Read & Write tool for ConnectedFaceShapeRepresentation"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWConnectedFaceShapeRepresentation self) -> RWStepShape_RWConnectedFaceShapeRepresentation

        Empty constructor


        """
        this = _RWStepShape.new_RWStepShape_RWConnectedFaceShapeRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWConnectedFaceShapeRepresentation self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_ConnectedFaceShapeRepresentation ent)

        Reads ConnectedFaceShapeRepresentation

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ConnectedFaceShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWConnectedFaceShapeRepresentation_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWConnectedFaceShapeRepresentation self, StepData_StepWriter SW, Handle_StepShape_ConnectedFaceShapeRepresentation ent)

        Writes ConnectedFaceShapeRepresentation

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ConnectedFaceShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWConnectedFaceShapeRepresentation_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWConnectedFaceShapeRepresentation self, Handle_StepShape_ConnectedFaceShapeRepresentation ent, Interface_EntityIterator iter)

        Fills data for graph (shared items)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ConnectedFaceShapeRepresentation
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWConnectedFaceShapeRepresentation_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWConnectedFaceShapeRepresentation
RWStepShape_RWConnectedFaceShapeRepresentation_swigregister = _RWStepShape.RWStepShape_RWConnectedFaceShapeRepresentation_swigregister
RWStepShape_RWConnectedFaceShapeRepresentation_swigregister(RWStepShape_RWConnectedFaceShapeRepresentation)

class RWStepShape_RWMeasureQualification(object):
    """Read & Write Module for MeasureQualification"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWMeasureQualification self) -> RWStepShape_RWMeasureQualification

        Read & Write Module for MeasureQualification
        """
        this = _RWStepShape.new_RWStepShape_RWMeasureQualification(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWMeasureQualification self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_MeasureQualification ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_MeasureQualification

        """
        return _RWStepShape.RWStepShape_RWMeasureQualification_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWMeasureQualification self, StepData_StepWriter SW, Handle_StepShape_MeasureQualification ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_MeasureQualification

        """
        return _RWStepShape.RWStepShape_RWMeasureQualification_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWMeasureQualification self, Handle_StepShape_MeasureQualification ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_MeasureQualification
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWMeasureQualification_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWMeasureQualification
RWStepShape_RWMeasureQualification_swigregister = _RWStepShape.RWStepShape_RWMeasureQualification_swigregister
RWStepShape_RWMeasureQualification_swigregister(RWStepShape_RWMeasureQualification)

class RWStepShape_RWManifoldSurfaceShapeRepresentation(object):
    """Read & Write Module for ManifoldSurfaceShapeRepresentation"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWManifoldSurfaceShapeRepresentation self) -> RWStepShape_RWManifoldSurfaceShapeRepresentation

        Read & Write Module for ManifoldSurfaceShapeRepresentation
        """
        this = _RWStepShape.new_RWStepShape_RWManifoldSurfaceShapeRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWManifoldSurfaceShapeRepresentation self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_ManifoldSurfaceShapeRepresentation ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ManifoldSurfaceShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWManifoldSurfaceShapeRepresentation_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWManifoldSurfaceShapeRepresentation self, StepData_StepWriter SW, Handle_StepShape_ManifoldSurfaceShapeRepresentation ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ManifoldSurfaceShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWManifoldSurfaceShapeRepresentation_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWManifoldSurfaceShapeRepresentation self, Handle_StepShape_ManifoldSurfaceShapeRepresentation ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ManifoldSurfaceShapeRepresentation
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWManifoldSurfaceShapeRepresentation_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWManifoldSurfaceShapeRepresentation
RWStepShape_RWManifoldSurfaceShapeRepresentation_swigregister = _RWStepShape.RWStepShape_RWManifoldSurfaceShapeRepresentation_swigregister
RWStepShape_RWManifoldSurfaceShapeRepresentation_swigregister(RWStepShape_RWManifoldSurfaceShapeRepresentation)

class RWStepShape_RWMeasureRepresentationItemAndQualifiedRepresentationItem(object):
    """Read & Write Module for MeasureRepresentationItemAndQualifiedRepresentationItem"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWMeasureRepresentationItemAndQualifiedRepresentationItem self) -> RWStepShape_RWMeasureRepresentationItemAndQualifiedRepresentationItem

        Read & Write Module for MeasureRepresentationItemAndQualifiedRepresentationItem
        """
        this = _RWStepShape.new_RWStepShape_RWMeasureRepresentationItemAndQualifiedRepresentationItem(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWMeasureRepresentationItemAndQualifiedRepresentationItem self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem

        """
        return _RWStepShape.RWStepShape_RWMeasureRepresentationItemAndQualifiedRepresentationItem_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWMeasureRepresentationItemAndQualifiedRepresentationItem self, StepData_StepWriter SW, Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem

        """
        return _RWStepShape.RWStepShape_RWMeasureRepresentationItemAndQualifiedRepresentationItem_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWMeasureRepresentationItemAndQualifiedRepresentationItem self, Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWMeasureRepresentationItemAndQualifiedRepresentationItem_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWMeasureRepresentationItemAndQualifiedRepresentationItem
RWStepShape_RWMeasureRepresentationItemAndQualifiedRepresentationItem_swigregister = _RWStepShape.RWStepShape_RWMeasureRepresentationItemAndQualifiedRepresentationItem_swigregister
RWStepShape_RWMeasureRepresentationItemAndQualifiedRepresentationItem_swigregister(RWStepShape_RWMeasureRepresentationItemAndQualifiedRepresentationItem)

class RWStepShape_RWDimensionalLocation(object):
    """Read & Write tool for DimensionalLocation"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWDimensionalLocation self) -> RWStepShape_RWDimensionalLocation

        Empty constructor


        """
        this = _RWStepShape.new_RWStepShape_RWDimensionalLocation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWDimensionalLocation self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_DimensionalLocation ent)

        Reads DimensionalLocation

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_DimensionalLocation

        """
        return _RWStepShape.RWStepShape_RWDimensionalLocation_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWDimensionalLocation self, StepData_StepWriter SW, Handle_StepShape_DimensionalLocation ent)

        Writes DimensionalLocation

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_DimensionalLocation

        """
        return _RWStepShape.RWStepShape_RWDimensionalLocation_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWDimensionalLocation self, Handle_StepShape_DimensionalLocation ent, Interface_EntityIterator iter)

        Fills data for graph (shared items)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_DimensionalLocation
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWDimensionalLocation_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWDimensionalLocation
RWStepShape_RWDimensionalLocation_swigregister = _RWStepShape.RWStepShape_RWDimensionalLocation_swigregister
RWStepShape_RWDimensionalLocation_swigregister(RWStepShape_RWDimensionalLocation)

class RWStepShape_RWDefinitionalRepresentationAndShapeRepresentation(object):
    """Read & Write Module for ConversionBasedUnitAndLengthUnit"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWDefinitionalRepresentationAndShapeRepresentation self) -> RWStepShape_RWDefinitionalRepresentationAndShapeRepresentation

        Read & Write Module for ConversionBasedUnitAndLengthUnit
        """
        this = _RWStepShape.new_RWStepShape_RWDefinitionalRepresentationAndShapeRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWDefinitionalRepresentationAndShapeRepresentation self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWDefinitionalRepresentationAndShapeRepresentation_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWDefinitionalRepresentationAndShapeRepresentation self, StepData_StepWriter SW, Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWDefinitionalRepresentationAndShapeRepresentation_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWDefinitionalRepresentationAndShapeRepresentation self, Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWDefinitionalRepresentationAndShapeRepresentation_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWDefinitionalRepresentationAndShapeRepresentation
RWStepShape_RWDefinitionalRepresentationAndShapeRepresentation_swigregister = _RWStepShape.RWStepShape_RWDefinitionalRepresentationAndShapeRepresentation_swigregister
RWStepShape_RWDefinitionalRepresentationAndShapeRepresentation_swigregister(RWStepShape_RWDefinitionalRepresentationAndShapeRepresentation)

class RWStepShape_RWOrientedClosedShell(object):
    """Read & Write Module for OrientedClosedShell"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWOrientedClosedShell self) -> RWStepShape_RWOrientedClosedShell

        Read & Write Module for OrientedClosedShell
        """
        this = _RWStepShape.new_RWStepShape_RWOrientedClosedShell(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWOrientedClosedShell self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_OrientedClosedShell ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_OrientedClosedShell

        """
        return _RWStepShape.RWStepShape_RWOrientedClosedShell_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWOrientedClosedShell self, StepData_StepWriter SW, Handle_StepShape_OrientedClosedShell ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_OrientedClosedShell

        """
        return _RWStepShape.RWStepShape_RWOrientedClosedShell_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWOrientedClosedShell self, Handle_StepShape_OrientedClosedShell ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_OrientedClosedShell
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWOrientedClosedShell_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWOrientedClosedShell
RWStepShape_RWOrientedClosedShell_swigregister = _RWStepShape.RWStepShape_RWOrientedClosedShell_swigregister
RWStepShape_RWOrientedClosedShell_swigregister(RWStepShape_RWOrientedClosedShell)

class RWStepShape_RWNonManifoldSurfaceShapeRepresentation(object):
    """Read & Write tool for NonManifoldSurfaceShapeRepresentation"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWNonManifoldSurfaceShapeRepresentation self) -> RWStepShape_RWNonManifoldSurfaceShapeRepresentation

        Empty constructor


        """
        this = _RWStepShape.new_RWStepShape_RWNonManifoldSurfaceShapeRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWNonManifoldSurfaceShapeRepresentation self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_NonManifoldSurfaceShapeRepresentation ent)

        Reads NonManifoldSurfaceShapeRepresentation

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_NonManifoldSurfaceShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWNonManifoldSurfaceShapeRepresentation_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWNonManifoldSurfaceShapeRepresentation self, StepData_StepWriter SW, Handle_StepShape_NonManifoldSurfaceShapeRepresentation ent)

        Writes NonManifoldSurfaceShapeRepresentation

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_NonManifoldSurfaceShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWNonManifoldSurfaceShapeRepresentation_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWNonManifoldSurfaceShapeRepresentation self, Handle_StepShape_NonManifoldSurfaceShapeRepresentation ent, Interface_EntityIterator iter)

        Fills data for graph (shared items)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_NonManifoldSurfaceShapeRepresentation
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWNonManifoldSurfaceShapeRepresentation_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWNonManifoldSurfaceShapeRepresentation
RWStepShape_RWNonManifoldSurfaceShapeRepresentation_swigregister = _RWStepShape.RWStepShape_RWNonManifoldSurfaceShapeRepresentation_swigregister
RWStepShape_RWNonManifoldSurfaceShapeRepresentation_swigregister(RWStepShape_RWNonManifoldSurfaceShapeRepresentation)

class RWStepShape_RWFace(object):
    """Read & Write Module for Face"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWFace self) -> RWStepShape_RWFace

        Read & Write Module for Face
        """
        this = _RWStepShape.new_RWStepShape_RWFace(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWFace self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_Face ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Face

        """
        return _RWStepShape.RWStepShape_RWFace_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWFace self, StepData_StepWriter SW, Handle_StepShape_Face ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Face

        """
        return _RWStepShape.RWStepShape_RWFace_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWFace self, Handle_StepShape_Face ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Face
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWFace_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWFace
RWStepShape_RWFace_swigregister = _RWStepShape.RWStepShape_RWFace_swigregister
RWStepShape_RWFace_swigregister(RWStepShape_RWFace)

class RWStepShape_RWBrepWithVoids(object):
    """Read & Write Module for BrepWithVoids"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWBrepWithVoids self) -> RWStepShape_RWBrepWithVoids

        Read & Write Module for BrepWithVoids
        """
        this = _RWStepShape.new_RWStepShape_RWBrepWithVoids(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWBrepWithVoids self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_BrepWithVoids ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_BrepWithVoids

        """
        return _RWStepShape.RWStepShape_RWBrepWithVoids_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWBrepWithVoids self, StepData_StepWriter SW, Handle_StepShape_BrepWithVoids ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_BrepWithVoids

        """
        return _RWStepShape.RWStepShape_RWBrepWithVoids_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWBrepWithVoids self, Handle_StepShape_BrepWithVoids ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_BrepWithVoids
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWBrepWithVoids_Share(self, *args)


    def Check(self, *args):
        """
        Check(RWStepShape_RWBrepWithVoids self, Handle_StepShape_BrepWithVoids ent, Interface_ShareTool shares, Handle_Interface_Check ach)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_BrepWithVoids
        :type shares: OCC.wrapper.Interface.Interface_ShareTool
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check

        """
        return _RWStepShape.RWStepShape_RWBrepWithVoids_Check(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWBrepWithVoids
RWStepShape_RWBrepWithVoids_swigregister = _RWStepShape.RWStepShape_RWBrepWithVoids_swigregister
RWStepShape_RWBrepWithVoids_swigregister(RWStepShape_RWBrepWithVoids)

class RWStepShape_RWBoxDomain(object):
    """Read & Write Module for BoxDomain"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWBoxDomain self) -> RWStepShape_RWBoxDomain

        Read & Write Module for BoxDomain
        """
        this = _RWStepShape.new_RWStepShape_RWBoxDomain(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWBoxDomain self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_BoxDomain ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_BoxDomain

        """
        return _RWStepShape.RWStepShape_RWBoxDomain_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWBoxDomain self, StepData_StepWriter SW, Handle_StepShape_BoxDomain ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_BoxDomain

        """
        return _RWStepShape.RWStepShape_RWBoxDomain_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWBoxDomain self, Handle_StepShape_BoxDomain ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_BoxDomain
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWBoxDomain_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWBoxDomain
RWStepShape_RWBoxDomain_swigregister = _RWStepShape.RWStepShape_RWBoxDomain_swigregister
RWStepShape_RWBoxDomain_swigregister(RWStepShape_RWBoxDomain)

class RWStepShape_RWShapeRepresentationWithParameters(object):
    """Read & Write tool for ShapeRepresentationWithParameters"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWShapeRepresentationWithParameters self) -> RWStepShape_RWShapeRepresentationWithParameters

        Empty constructor


        """
        this = _RWStepShape.new_RWStepShape_RWShapeRepresentationWithParameters(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWShapeRepresentationWithParameters self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_ShapeRepresentationWithParameters ent)

        Reads ShapeRepresentationWithParameters

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ShapeRepresentationWithParameters

        """
        return _RWStepShape.RWStepShape_RWShapeRepresentationWithParameters_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWShapeRepresentationWithParameters self, StepData_StepWriter SW, Handle_StepShape_ShapeRepresentationWithParameters ent)

        Writes ShapeRepresentationWithParameters

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ShapeRepresentationWithParameters

        """
        return _RWStepShape.RWStepShape_RWShapeRepresentationWithParameters_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWShapeRepresentationWithParameters self, Handle_StepShape_ShapeRepresentationWithParameters ent, Interface_EntityIterator iter)

        Fills data for graph (shared items)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ShapeRepresentationWithParameters
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWShapeRepresentationWithParameters_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWShapeRepresentationWithParameters
RWStepShape_RWShapeRepresentationWithParameters_swigregister = _RWStepShape.RWStepShape_RWShapeRepresentationWithParameters_swigregister
RWStepShape_RWShapeRepresentationWithParameters_swigregister(RWStepShape_RWShapeRepresentationWithParameters)

class RWStepShape_RWRightCircularCylinder(object):
    """Read & Write Module for RightCircularCylinder"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWRightCircularCylinder self) -> RWStepShape_RWRightCircularCylinder

        Read & Write Module for RightCircularCylinder
        """
        this = _RWStepShape.new_RWStepShape_RWRightCircularCylinder(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWRightCircularCylinder self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_RightCircularCylinder ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_RightCircularCylinder

        """
        return _RWStepShape.RWStepShape_RWRightCircularCylinder_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWRightCircularCylinder self, StepData_StepWriter SW, Handle_StepShape_RightCircularCylinder ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_RightCircularCylinder

        """
        return _RWStepShape.RWStepShape_RWRightCircularCylinder_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWRightCircularCylinder self, Handle_StepShape_RightCircularCylinder ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_RightCircularCylinder
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWRightCircularCylinder_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWRightCircularCylinder
RWStepShape_RWRightCircularCylinder_swigregister = _RWStepShape.RWStepShape_RWRightCircularCylinder_swigregister
RWStepShape_RWRightCircularCylinder_swigregister(RWStepShape_RWRightCircularCylinder)

class RWStepShape_RWRightCircularCone(object):
    """Read & Write Module for RightCircularCone"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWRightCircularCone self) -> RWStepShape_RWRightCircularCone

        Read & Write Module for RightCircularCone
        """
        this = _RWStepShape.new_RWStepShape_RWRightCircularCone(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWRightCircularCone self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_RightCircularCone ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_RightCircularCone

        """
        return _RWStepShape.RWStepShape_RWRightCircularCone_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWRightCircularCone self, StepData_StepWriter SW, Handle_StepShape_RightCircularCone ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_RightCircularCone

        """
        return _RWStepShape.RWStepShape_RWRightCircularCone_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWRightCircularCone self, Handle_StepShape_RightCircularCone ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_RightCircularCone
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWRightCircularCone_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWRightCircularCone
RWStepShape_RWRightCircularCone_swigregister = _RWStepShape.RWStepShape_RWRightCircularCone_swigregister
RWStepShape_RWRightCircularCone_swigregister(RWStepShape_RWRightCircularCone)

class RWStepShape_RWCompoundShapeRepresentation(object):
    """Read & Write tool for CompoundShapeRepresentation"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWCompoundShapeRepresentation self) -> RWStepShape_RWCompoundShapeRepresentation

        Empty constructor


        """
        this = _RWStepShape.new_RWStepShape_RWCompoundShapeRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWCompoundShapeRepresentation self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_CompoundShapeRepresentation ent)

        Reads CompoundShapeRepresentation

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_CompoundShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWCompoundShapeRepresentation_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWCompoundShapeRepresentation self, StepData_StepWriter SW, Handle_StepShape_CompoundShapeRepresentation ent)

        Writes CompoundShapeRepresentation

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_CompoundShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWCompoundShapeRepresentation_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWCompoundShapeRepresentation self, Handle_StepShape_CompoundShapeRepresentation ent, Interface_EntityIterator iter)

        Fills data for graph (shared items)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_CompoundShapeRepresentation
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWCompoundShapeRepresentation_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWCompoundShapeRepresentation
RWStepShape_RWCompoundShapeRepresentation_swigregister = _RWStepShape.RWStepShape_RWCompoundShapeRepresentation_swigregister
RWStepShape_RWCompoundShapeRepresentation_swigregister(RWStepShape_RWCompoundShapeRepresentation)

class RWStepShape_RWOrientedEdge(object):
    """Read & Write Module for OrientedEdge"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWOrientedEdge self) -> RWStepShape_RWOrientedEdge

        Read & Write Module for OrientedEdge
        """
        this = _RWStepShape.new_RWStepShape_RWOrientedEdge(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWOrientedEdge self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_OrientedEdge ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_OrientedEdge

        """
        return _RWStepShape.RWStepShape_RWOrientedEdge_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWOrientedEdge self, StepData_StepWriter SW, Handle_StepShape_OrientedEdge ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_OrientedEdge

        """
        return _RWStepShape.RWStepShape_RWOrientedEdge_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWOrientedEdge self, Handle_StepShape_OrientedEdge ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_OrientedEdge
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWOrientedEdge_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWOrientedEdge
RWStepShape_RWOrientedEdge_swigregister = _RWStepShape.RWStepShape_RWOrientedEdge_swigregister
RWStepShape_RWOrientedEdge_swigregister(RWStepShape_RWOrientedEdge)

class RWStepShape_RWShapeDefinitionRepresentation(object):
    """Read & Write tool for ShapeDefinitionRepresentation"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWShapeDefinitionRepresentation self) -> RWStepShape_RWShapeDefinitionRepresentation

        Empty constructor


        """
        this = _RWStepShape.new_RWStepShape_RWShapeDefinitionRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWShapeDefinitionRepresentation self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_ShapeDefinitionRepresentation ent)

        Reads ShapeDefinitionRepresentation

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ShapeDefinitionRepresentation

        """
        return _RWStepShape.RWStepShape_RWShapeDefinitionRepresentation_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWShapeDefinitionRepresentation self, StepData_StepWriter SW, Handle_StepShape_ShapeDefinitionRepresentation ent)

        Writes ShapeDefinitionRepresentation

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ShapeDefinitionRepresentation

        """
        return _RWStepShape.RWStepShape_RWShapeDefinitionRepresentation_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWShapeDefinitionRepresentation self, Handle_StepShape_ShapeDefinitionRepresentation ent, Interface_EntityIterator iter)

        Fills data for graph (shared items)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ShapeDefinitionRepresentation
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWShapeDefinitionRepresentation_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWShapeDefinitionRepresentation
RWStepShape_RWShapeDefinitionRepresentation_swigregister = _RWStepShape.RWStepShape_RWShapeDefinitionRepresentation_swigregister
RWStepShape_RWShapeDefinitionRepresentation_swigregister(RWStepShape_RWShapeDefinitionRepresentation)

class RWStepShape_RWCsgShapeRepresentation(object):
    """Read & Write Module for CsgShapeRepresentation"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWCsgShapeRepresentation self) -> RWStepShape_RWCsgShapeRepresentation

        Read & Write Module for CsgShapeRepresentation
        """
        this = _RWStepShape.new_RWStepShape_RWCsgShapeRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWCsgShapeRepresentation self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_CsgShapeRepresentation ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_CsgShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWCsgShapeRepresentation_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWCsgShapeRepresentation self, StepData_StepWriter SW, Handle_StepShape_CsgShapeRepresentation ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_CsgShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWCsgShapeRepresentation_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWCsgShapeRepresentation self, Handle_StepShape_CsgShapeRepresentation ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_CsgShapeRepresentation
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWCsgShapeRepresentation_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWCsgShapeRepresentation
RWStepShape_RWCsgShapeRepresentation_swigregister = _RWStepShape.RWStepShape_RWCsgShapeRepresentation_swigregister
RWStepShape_RWCsgShapeRepresentation_swigregister(RWStepShape_RWCsgShapeRepresentation)

class RWStepShape_RWEdgeBasedWireframeShapeRepresentation(object):
    """Read & Write tool for EdgeBasedWireframeShapeRepresentation"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWEdgeBasedWireframeShapeRepresentation self) -> RWStepShape_RWEdgeBasedWireframeShapeRepresentation

        Empty constructor


        """
        this = _RWStepShape.new_RWStepShape_RWEdgeBasedWireframeShapeRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWEdgeBasedWireframeShapeRepresentation self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_EdgeBasedWireframeShapeRepresentation ent)

        Reads EdgeBasedWireframeShapeRepresentation

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_EdgeBasedWireframeShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWEdgeBasedWireframeShapeRepresentation_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWEdgeBasedWireframeShapeRepresentation self, StepData_StepWriter SW, Handle_StepShape_EdgeBasedWireframeShapeRepresentation ent)

        Writes EdgeBasedWireframeShapeRepresentation

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_EdgeBasedWireframeShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWEdgeBasedWireframeShapeRepresentation_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWEdgeBasedWireframeShapeRepresentation self, Handle_StepShape_EdgeBasedWireframeShapeRepresentation ent, Interface_EntityIterator iter)

        Fills data for graph (shared items)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_EdgeBasedWireframeShapeRepresentation
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWEdgeBasedWireframeShapeRepresentation_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWEdgeBasedWireframeShapeRepresentation
RWStepShape_RWEdgeBasedWireframeShapeRepresentation_swigregister = _RWStepShape.RWStepShape_RWEdgeBasedWireframeShapeRepresentation_swigregister
RWStepShape_RWEdgeBasedWireframeShapeRepresentation_swigregister(RWStepShape_RWEdgeBasedWireframeShapeRepresentation)

class RWStepShape_RWContextDependentShapeRepresentation(object):
    """Read & Write Module for ContextDependentShapeRepresentation"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWContextDependentShapeRepresentation self) -> RWStepShape_RWContextDependentShapeRepresentation

        Read & Write Module for ContextDependentShapeRepresentation
        """
        this = _RWStepShape.new_RWStepShape_RWContextDependentShapeRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWContextDependentShapeRepresentation self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_ContextDependentShapeRepresentation ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ContextDependentShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWContextDependentShapeRepresentation_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWContextDependentShapeRepresentation self, StepData_StepWriter SW, Handle_StepShape_ContextDependentShapeRepresentation ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ContextDependentShapeRepresentation

        """
        return _RWStepShape.RWStepShape_RWContextDependentShapeRepresentation_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWContextDependentShapeRepresentation self, Handle_StepShape_ContextDependentShapeRepresentation ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ContextDependentShapeRepresentation
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWContextDependentShapeRepresentation_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWContextDependentShapeRepresentation
RWStepShape_RWContextDependentShapeRepresentation_swigregister = _RWStepShape.RWStepShape_RWContextDependentShapeRepresentation_swigregister
RWStepShape_RWContextDependentShapeRepresentation_swigregister(RWStepShape_RWContextDependentShapeRepresentation)

class RWStepShape_RWDimensionalSizeWithPath(object):
    """Read & Write tool for DimensionalSizeWithPath"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWDimensionalSizeWithPath self) -> RWStepShape_RWDimensionalSizeWithPath

        Empty constructor


        """
        this = _RWStepShape.new_RWStepShape_RWDimensionalSizeWithPath(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWDimensionalSizeWithPath self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_DimensionalSizeWithPath ent)

        Reads DimensionalSizeWithPath

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_DimensionalSizeWithPath

        """
        return _RWStepShape.RWStepShape_RWDimensionalSizeWithPath_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWDimensionalSizeWithPath self, StepData_StepWriter SW, Handle_StepShape_DimensionalSizeWithPath ent)

        Writes DimensionalSizeWithPath

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_DimensionalSizeWithPath

        """
        return _RWStepShape.RWStepShape_RWDimensionalSizeWithPath_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWDimensionalSizeWithPath self, Handle_StepShape_DimensionalSizeWithPath ent, Interface_EntityIterator iter)

        Fills data for graph (shared items)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_DimensionalSizeWithPath
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWDimensionalSizeWithPath_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWDimensionalSizeWithPath
RWStepShape_RWDimensionalSizeWithPath_swigregister = _RWStepShape.RWStepShape_RWDimensionalSizeWithPath_swigregister
RWStepShape_RWDimensionalSizeWithPath_swigregister(RWStepShape_RWDimensionalSizeWithPath)

class RWStepShape_RWDimensionalSize(object):
    """Read & Write tool for DimensionalSize"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWDimensionalSize self) -> RWStepShape_RWDimensionalSize

        Empty constructor


        """
        this = _RWStepShape.new_RWStepShape_RWDimensionalSize(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWDimensionalSize self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_DimensionalSize ent)

        Reads DimensionalSize

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_DimensionalSize

        """
        return _RWStepShape.RWStepShape_RWDimensionalSize_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWDimensionalSize self, StepData_StepWriter SW, Handle_StepShape_DimensionalSize ent)

        Writes DimensionalSize

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_DimensionalSize

        """
        return _RWStepShape.RWStepShape_RWDimensionalSize_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWDimensionalSize self, Handle_StepShape_DimensionalSize ent, Interface_EntityIterator iter)

        Fills data for graph (shared items)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_DimensionalSize
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWDimensionalSize_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWDimensionalSize
RWStepShape_RWDimensionalSize_swigregister = _RWStepShape.RWStepShape_RWDimensionalSize_swigregister
RWStepShape_RWDimensionalSize_swigregister(RWStepShape_RWDimensionalSize)

class RWStepShape_RWFacetedBrepAndBrepWithVoids(object):
    """Read & Write Module for FacetedBrepAndBrepWithVoids"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWFacetedBrepAndBrepWithVoids self) -> RWStepShape_RWFacetedBrepAndBrepWithVoids

        Read & Write Module for FacetedBrepAndBrepWithVoids
        """
        this = _RWStepShape.new_RWStepShape_RWFacetedBrepAndBrepWithVoids(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWFacetedBrepAndBrepWithVoids self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_FacetedBrepAndBrepWithVoids ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_FacetedBrepAndBrepWithVoids

        """
        return _RWStepShape.RWStepShape_RWFacetedBrepAndBrepWithVoids_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWFacetedBrepAndBrepWithVoids self, StepData_StepWriter SW, Handle_StepShape_FacetedBrepAndBrepWithVoids ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_FacetedBrepAndBrepWithVoids

        """
        return _RWStepShape.RWStepShape_RWFacetedBrepAndBrepWithVoids_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWFacetedBrepAndBrepWithVoids self, Handle_StepShape_FacetedBrepAndBrepWithVoids ent, Interface_EntityIterator iter)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_FacetedBrepAndBrepWithVoids
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWFacetedBrepAndBrepWithVoids_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWFacetedBrepAndBrepWithVoids
RWStepShape_RWFacetedBrepAndBrepWithVoids_swigregister = _RWStepShape.RWStepShape_RWFacetedBrepAndBrepWithVoids_swigregister
RWStepShape_RWFacetedBrepAndBrepWithVoids_swigregister(RWStepShape_RWFacetedBrepAndBrepWithVoids)

class RWStepShape_RWLoop(object):
    """Read & Write Module for Loop"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWLoop self) -> RWStepShape_RWLoop

        Read & Write Module for Loop
        """
        this = _RWStepShape.new_RWStepShape_RWLoop(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWLoop self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_Loop ent)

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Loop

        """
        return _RWStepShape.RWStepShape_RWLoop_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWLoop self, StepData_StepWriter SW, Handle_StepShape_Loop ent)

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_Loop

        """
        return _RWStepShape.RWStepShape_RWLoop_WriteStep(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWLoop
RWStepShape_RWLoop_swigregister = _RWStepShape.RWStepShape_RWLoop_swigregister
RWStepShape_RWLoop_swigregister(RWStepShape_RWLoop)

class RWStepShape_RWSeamEdge(object):
    """Read & Write tool for SeamEdge"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWSeamEdge self) -> RWStepShape_RWSeamEdge

        Empty constructor


        """
        this = _RWStepShape.new_RWStepShape_RWSeamEdge(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWSeamEdge self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_SeamEdge ent)

        Reads SeamEdge

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_SeamEdge

        """
        return _RWStepShape.RWStepShape_RWSeamEdge_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWSeamEdge self, StepData_StepWriter SW, Handle_StepShape_SeamEdge ent)

        Writes SeamEdge

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_SeamEdge

        """
        return _RWStepShape.RWStepShape_RWSeamEdge_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWSeamEdge self, Handle_StepShape_SeamEdge ent, Interface_EntityIterator iter)

        Fills data for graph (shared items)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_SeamEdge
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWSeamEdge_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWSeamEdge
RWStepShape_RWSeamEdge_swigregister = _RWStepShape.RWStepShape_RWSeamEdge_swigregister
RWStepShape_RWSeamEdge_swigregister(RWStepShape_RWSeamEdge)

class RWStepShape_RWShapeDimensionRepresentation(object):
    """Read & Write tool for ShapeDimensionRepresentation"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(RWStepShape_RWShapeDimensionRepresentation self) -> RWStepShape_RWShapeDimensionRepresentation

        Empty constructor


        """
        this = _RWStepShape.new_RWStepShape_RWShapeDimensionRepresentation(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def ReadStep(self, *args):
        """
        ReadStep(RWStepShape_RWShapeDimensionRepresentation self, Handle_StepData_StepReaderData data, Standard_Integer const num, Handle_Interface_Check ach, Handle_StepShape_ShapeDimensionRepresentation ent)

        Reads ShapeDimensionRepresentation

        :type data: OCC.wrapper.StepData.Handle_StepData_StepReaderData
        :type num: int
        :type ach: OCC.wrapper.Interface.Handle_Interface_Check
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ShapeDimensionRepresentation

        """
        return _RWStepShape.RWStepShape_RWShapeDimensionRepresentation_ReadStep(self, *args)


    def WriteStep(self, *args):
        """
        WriteStep(RWStepShape_RWShapeDimensionRepresentation self, StepData_StepWriter SW, Handle_StepShape_ShapeDimensionRepresentation ent)

        Writes ShapeDimensionRepresentation

        :type SW: OCC.wrapper.StepData.StepData_StepWriter
        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ShapeDimensionRepresentation

        """
        return _RWStepShape.RWStepShape_RWShapeDimensionRepresentation_WriteStep(self, *args)


    def Share(self, *args):
        """
        Share(RWStepShape_RWShapeDimensionRepresentation self, Handle_StepShape_ShapeDimensionRepresentation ent, Interface_EntityIterator iter)

        Fills data for graph (shared items)

        :type ent: OCC.wrapper.StepShape.Handle_StepShape_ShapeDimensionRepresentation
        :type iter: OCC.wrapper.Interface.Interface_EntityIterator

        """
        return _RWStepShape.RWStepShape_RWShapeDimensionRepresentation_Share(self, *args)

    __swig_destroy__ = _RWStepShape.delete_RWStepShape_RWShapeDimensionRepresentation
RWStepShape_RWShapeDimensionRepresentation_swigregister = _RWStepShape.RWStepShape_RWShapeDimensionRepresentation_swigregister
RWStepShape_RWShapeDimensionRepresentation_swigregister(RWStepShape_RWShapeDimensionRepresentation)



