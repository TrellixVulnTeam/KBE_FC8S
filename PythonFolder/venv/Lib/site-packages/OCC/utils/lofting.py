#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright (C) 2016-2021 ParaPy Holding B.V.
#
# This file is subject to the terms and conditions defined in
# the license agreement that you have received with this source code
#
# THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY
# KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR
# PURPOSE.

from OCC.wrapper.BRepOffsetAPI import BRepOffsetAPI_ThruSections
from OCC.wrapper.TopoDS import TopoDS_Vertex

__all__ = ["loft"]
__author__ = "Reinier van Dijk (support@parapy.org)"


def loft(sections, is_solid=False, ruled=False, precision=1.0e-06,
         check_compatibility=False, max_degree=None, smoothing=False,
         continuity=None, parameterization=None):
    builder = BRepOffsetAPI_ThruSections()

    builder.Init(is_solid, ruled, precision)
    for section in sections:
        if isinstance(section, TopoDS_Vertex):
            builder.AddVertex(section)
        else:
            builder.AddWire(section)

    builder.CheckCompatibility(check_compatibility)
    builder.SetSmoothing(smoothing)
    if continuity is not None:
        builder.SetContinuity(continuity)
    if parameterization is not None:
        builder.SetParType(parameterization)
    if max_degree is not None:
        builder.SetMaxDegree(max_degree)

    builder.Build()
    if not builder.IsDone():
        raise Exception("BRepOffsetAPI_ThruSections() failed")

    return builder.Shape()
